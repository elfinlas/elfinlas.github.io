{"version":3,"file":"component---src-pages-index-jsx-3a7552ef134f0353258b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/social-link/index.jsx","webpack://gatsby-starter-default/./src/components/profile/index.jsx","webpack://gatsby-starter-default/./src/components/simple-taglist/index.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { FaInstagram, FaFacebook, FaLinkedin, FaGithub } from \"react-icons/fa\"\nimport { SiNaver, SiThreads, SiVelog } from \"react-icons/si\"\nimport { CgWebsite } from \"react-icons/cg\"\nimport { MdOutlineEmail } from \"react-icons/md\"\nimport { BsFillRssFill } from \"react-icons/bs\"\n\nconst EmojiLink = styled.span`\n  cursor: pointer;\n  color: ${props => props.theme.emoji};\n`\n\nconst RssLink = styled(EmojiLink)`\n  color: ${props => props.theme.emoji};\n`\n\nconst StyledRssIcon = styled(BsFillRssFill)`\n  color: ${props => props.theme.emoji};\n`\n\nconst socialEmojis = {\n  github: <FaGithub className=\"icon\" size=\"26\" />,\n  naver: <SiNaver className=\"icon\" size=\"26\" />,\n  instagram: <FaInstagram className=\"icon\" size=\"26\" />,\n  thread: <SiThreads className=\"icon\" size=\"26\" />,\n  email: <MdOutlineEmail className=\"icon\" size=\"26\" />,\n  mhlab: <CgWebsite className=\"icon\" size=\"26\" />,\n\n  // facebook: <FaFacebook className=\"icon\" size=\"26\" />,\n  // linkedin: <FaLinkedin className=\"icon\" size=\"26\" />,\n  // velog: <SiVelog className=\"icon\" size=\"26\" />,\n}\n\nconst StyledSocialLinks = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-left: 15px;\n  margin-bottom: 30px;\n`\n\nconst SocialLinks = ({ socialLinks }) => {\n  return (\n    <StyledSocialLinks>\n      {/* <RssLink>\n        <Link to=\"/rss.xml\">\n          <StyledRssIcon className=\"icon\" size=\"26\" />\n        </Link>\n      </RssLink> */}\n      {Object.entries(socialLinks).map(([key, link]) =>\n        key === \"email\" ? (\n          <a key={key} href={`mailto:${link}`}>\n            <EmojiLink>{socialEmojis[key]}</EmojiLink>\n          </a>\n        ) : (\n          <Link key={key} to={link} target=\"_blank\">\n            <EmojiLink>{socialEmojis[key]}</EmojiLink>\n          </Link>\n        )\n      )}\n      \n    </StyledSocialLinks>\n  )\n}\n\nexport default SocialLinks\n","import kebabCase from \"lodash.kebabcase\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { siteMetadata } from \"../../../gatsby-config\"\nimport SocialLinks from \"../social-link\"\n\nconst Profile = ({ author, description, siteUrl, keywords, socialLinks }) => {\n  const truncatedDescription = truncateText(description, 300)\n\n  return (\n    <div>\n      <ProfileStyle>\n        <Image siteUrl={siteUrl} />\n        <Text>\n          <Author>{author}</Author>\n          <Description>{truncatedDescription}</Description>\n          <KeyWordsStyle>\n            {keywords.map(keyword => (\n              <KeyWordStyle key={kebabCase(keyword)}>\n                {kebabCase(keyword)}\n              </KeyWordStyle>\n            ))}\n          </KeyWordsStyle>\n        </Text>\n      </ProfileStyle>\n\n      {/* 소셜 링크 */}\n      <SocialLinks socialLinks={socialLinks} />\n\n      {/* 개인 서비스 링크 */}\n      <MyServiceLink>\n        <MyServiceLinkItem>\n          <MyServiceIconImg iconImg={\"myc_icon.png\"}></MyServiceIconImg>\n          <a\n            href=\"https://play.google.com/store/apps/details?id=dev.mhlab.myc\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              marginTop: \"5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n              textDecoration: \"none\",\n              color: \"#828b93\",\n              fontSize: \"18px\",\n            }}\n          >\n            마와셀 (안드로이드)\n          </a>\n        </MyServiceLinkItem>\n\n        <MyServiceLinkItem>\n          <MyServiceIconImg iconImg={\"myc_icon.png\"}></MyServiceIconImg>\n          <a\n            href=\"https://itunes.apple.com/kr/app/apple-store/6474965246\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              marginTop: \"5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n              textDecoration: \"none\",\n              color: \"#828b93\",\n              fontSize: \"18px\",\n            }}\n          >\n            마와셀 (iOS)\n          </a>\n        </MyServiceLinkItem>\n\n        <MyServiceLinkItem>\n          <MyServiceIconImg iconImg={\"myc_icon.png\"}></MyServiceIconImg>\n          <a\n            href=\"https://appmyc.info\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              marginTop: \"5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\",\n              textDecoration: \"none\",\n              color: \"#828b93\",\n              fontSize: \"18px\",\n            }}\n          >\n            마와셀-와인 가격 비교 (웹)\n          </a>\n        </MyServiceLinkItem>\n      </MyServiceLink>\n    </div>\n  )\n}\n\nconst truncateText = (text, maxLength) => {\n  // \\n을 <br /> 태그로 변환\n  // const formattedText = text.replace(/\\n/g, \",<br />\")\n  // const formattedText = text.replace(/\\n/g, \"<br /><br />\") // 수정된 부분\n\n  // // HTML 태그를 포함한 전체 길이 체크\n  // if (formattedText.length <= maxLength) return formattedText\n  // return formattedText.slice(0, maxLength) + \"...\"\n\n  if (text.length <= maxLength) return text\n  return text.slice(0, maxLength) + \"...\"\n}\n\nconst ProfileStyle = styled.div`\n  display: flex;\n  align-items: center;\n  padding-bottom: 40px;\n`\n\nconst Text = styled.div`\n  margin-left: 25px;\n  width: 60%;\n`\n\nconst Author = styled.div`\n  font-size: 25px;\n  color: ${props => props.theme.main.text};\n  padding-bottom: 8px;\n  font-weight: 600;\n`\n\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${props => props.theme.profile.description};\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst KeyWordsStyle = styled.div`\n  margin-top: 30px;\n  margin-left: -3px;\n  @media ${\"screen and (max-width: 768px)\"} {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    margin-top: 10px;\n  }\n`\n\nconst KeyWordStyle = styled.span`\n  font-size: 15px;\n  margin-right: 13px;\n  border-radius: 15px;\n  padding: 3px 8px;\n  background-color: #484848;\n  color: ${props => props.theme.main.text};\n  background-color: ${props => props.theme.profile.keyword};\n  @media ${\"screen and (max-width: 768px)\"} {\n    margin-top: 10px;\n    padding: 10px;\n  }\n`\n\nconst Image = styled.div`\n  background-image: url(${siteMetadata.siteUrl}/profile.png);\n  width: 140px;\n  height: 140px;\n  border: 1px solid transparent;\n  border-color: white;\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n`\n\nconst MyServiceLinkItem = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst MyServiceLink = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  justify-content: baseline;\n  margin-top: 20px;\n`\n\nconst MyServiceIconImg = styled.div`\n  background-image: url(${props => handel(props.iconImg)});\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n  background-position: center;\n  border-radius: 20%;\n`\nconst handel = props => {\n  return `${siteMetadata.siteUrl}/${props}`\n}\n\nexport default Profile\n\n/*\nborder: 1px solid transparent;\nborder-color: white;\n  \n  border-radius: 50%;\n*/\n","import React, { useState } from \"react\";\nimport kebabCase from \"lodash.kebabcase\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst SimpleTagList = ({ tags, allCount, posts }) => {\n  const [showAllTags, setShowAllTags] = useState(false);\n  const maxVisibleTags = 20;\n\n  const filteredPosts = posts || [];\n  \n  const filteredTags = tags.filter(tag => {\n    const privatePosts = filteredPosts.filter(post => \n      post.frontmatter && \n      post.frontmatter.tags && \n      post.frontmatter.tags.includes(tag.fieldValue) && \n      post.frontmatter.isPrivate\n    );\n\n    return privatePosts.length === 0;\n  });\n\n  const visibleTags = showAllTags ? filteredTags : filteredTags.slice(0, maxVisibleTags);\n\n  return (\n    <TagListStyle>\n      <div>\n        <TagTitle>Tags ({filteredTags.length})</TagTitle>\n        {filteredTags.length > maxVisibleTags && (\n          <ShowMoreButton onClick={() => setShowAllTags(!showAllTags)}>\n            {showAllTags ? 'Less' : 'More'}\n          </ShowMoreButton>\n        )}\n        {visibleTags.map(tag => (\n          <TagStyle key={kebabCase(tag.fieldValue)}>\n            <span>\n              <StyledLink to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {(tag.fieldValue)} <TagCountStyle>({tag.totalCount})</TagCountStyle>\n              </StyledLink>\n            </span>\n          </TagStyle>\n        ))}\n      </div>\n    </TagListStyle>\n  );\n};\n\nconst TagListStyle = styled.div`\n  margin-left: 50px;\n  line-height: 30px;\n  display: flex;\n  margin-left: 0px;\n  padding-bottom: 40px;\n  border-bottom: 1.5px solid ${props => props.theme.main.border};\n  position: relative;\n`;\n\nconst TagTitle = styled.div`\n  font-size: 14px;\n  margin-left: 7px;\n  margin-bottom: 3px;\n  color: ${props => props.theme.tag.text};\n  font-weight: bold;\n`;\n\nconst TagStyle = styled.div`\n  float: left;\n  padding-left: 10px;\n  font-size: 13.5px;\n  transition: color 1s;\n\n  &:hover {\n    color: #f0f0f0;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  transition: color 1s;\n  color: ${props => props.theme.tag.text};\n\n  &:hover {\n    color: #999;\n  }\n`;\n\nconst TagCountStyle = styled.span`\n  color: ${props => props.theme.tag.count};\n  font-size: 13px;\n  transition: color 1s;\n\n  &:hover {\n    color: #999;\n  }\n`;\n\nconst ShowMoreButton = styled.button`\n  background-color: ${props => props.theme.tag.background};\n  border: none;\n  cursor: pointer;\n  color: ${props => props.theme.main.text};\n  font-size: 12.5px;\n  padding: 3px 6px;\n  border-radius: 5px;\n  margin-top: 10px;\n  position: absolute; \n  bottom: 8px;\n  left: 5px;\n  transition: background-color 0.5s;\n\n  &:hover {\n    background-color: ${props => props.theme.tag.hover};\n  }\n`;\n\n\nexport default SimpleTagList;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PageLayout from \"../components/layout/page-component\"\nimport PostList from \"../components/postlist\"\nimport Profile from \"../components/profile\"\nimport SimpleTagList from \"../components/simple-taglist\"\nimport styled from \"styled-components\"\nimport Seo from \"../components/seo\"\nimport { siteMetadata } from \"../../gatsby-config.js\"\n\nconst PostListTemplate = ({ data, location }) => {\n  const description = data.site.siteMetadata.description\n  const author = data.site.siteMetadata.author\n  const siteUrl = data.site.siteMetadata.siteUrl\n  const keywords = data.site.siteMetadata.keywords\n  const title = data.site.siteMetadata.title\n\n  const socialLinks = siteMetadata.socialLinks\n\n  const posts = data.allMarkdownRemark.nodes\n  const filteredPosts = posts.filter(post => !post.frontmatter.isPrivate)\n  const tags = data.allMarkdownRemark.group\n\n  // 공개인 포스트의 태그와 비공개인 포스트의 태그를 구분하여 개수 계산\n  const publicTags = data.allMarkdownRemark.group\n    .filter(tag => tag.nodes.some(post => !post.frontmatter.isPrivate))\n    .map(tag => ({\n      ...tag,\n      totalCount: tag.nodes.filter(post => !post.frontmatter.isPrivate).length,\n    }))\n\n  // 필터링된 태그의 개수\n  const filteredTagsCount =\n    tags.length - publicTags.reduce((acc, tag) => acc + tag.totalCount, 0)\n\n  return (\n    <PageLayout>\n      <Seo title={title} description={description} />\n      <Profile\n        author={author}\n        description={description}\n        siteUrl={siteUrl}\n        keywords={keywords}\n        socialLinks={socialLinks}\n      />\n      <Line />\n      <TagListStyle></TagListStyle>\n      {/* <SimpleTagList tags={publicTags} allCount={filteredTagsCount}/> */}\n      <PostCount>All Posts ({filteredPosts.length})</PostCount>\n      <PostList posts={posts}></PostList>\n    </PageLayout>\n  )\n}\n\nconst PostCount = styled.div`\n  font-size: 15px;\n  color: ${props => props.theme.tag.text};\n  font-weight: bold;\n  margin-left: 10px;\n  padding-top: 30px;\n`\n\nconst Line = styled.div`\n  margin-bottom: 10px;\n`\n\nconst TagListStyle = styled.div`\n  margin-left: 50px;\n  line-height: 30px;\n  display: flex;\n  margin-left: 0px;\n  padding-bottom: 20px;\n  border-bottom: 1.5px solid ${props => props.theme.main.border};\n  position: relative;\n`\n\nexport default PostListTemplate\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n        keywords\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(pruneLength: 500, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n          series\n          previewImage\n          isPrivate\n        }\n      }\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n        nodes {\n          frontmatter {\n            isPrivate\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["EmojiLink","styled","span","props","theme","emoji","socialEmojis","BsFillRssFill","github","className","size","naver","instagram","thread","email","mhlab","StyledSocialLinks","div","socialLinks","Object","entries","map","key","link","href","Link","to","target","truncateText","text","maxLength","length","slice","ProfileStyle","Text","Author","main","Description","profile","description","KeyWordsStyle","KeyWordStyle","keyword","Image","siteMetadata","siteUrl","MyServiceLinkItem","MyServiceLink","MyServiceIconImg","handel","iconImg","author","keywords","truncatedDescription","kebabCase","rel","style","marginTop","marginLeft","marginRight","textDecoration","color","fontSize","border","tag","count","button","background","hover","PostCount","Line","TagListStyle","data","location","site","title","posts","allMarkdownRemark","nodes","filteredPosts","filter","post","frontmatter","isPrivate","tags","group","publicTags","some","totalCount","reduce","acc"],"sourceRoot":""}