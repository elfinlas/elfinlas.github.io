{"version":3,"file":"component---src-templates-posts-template-index-tsx-bfdf9be0010b1eeb2cc3.js","mappings":"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","sources":["webpack://danmin-gatsby-blog/./src/models/post.ts","webpack://danmin-gatsby-blog/./src/components/PostCard/styled.tsx","webpack://danmin-gatsby-blog/./src/components/PostCard/index.tsx","webpack://danmin-gatsby-blog/./src/templates/posts-template/styled.ts","webpack://danmin-gatsby-blog/./src/templates/posts-template/index.tsx"],"sourcesContent":["import { MarkdownRemark } from '../type';\n\nexport default class PostClass {\n  id;\n  excerpt;\n  emoji;\n  html;\n  slug;\n  title;\n  author;\n  date;\n  categories;\n  filteredCategories;\n\n  constructor(node: MarkdownRemark) {\n    const { id, html, excerpt, frontmatter, fields } = node;\n\n    const { slug } = fields;\n    const { emoji, categories, title, author, date } = frontmatter;\n\n    const categoryArr = categories.split(' ');\n\n    this.id = id;\n    this.excerpt = excerpt;\n    this.emoji = emoji;\n    this.html = html;\n    this.slug = slug;\n    this.title = title;\n    this.author = author;\n    this.date = date;\n    this.categories = categoryArr;\n    this.filteredCategories = categoryArr.map((category) => {\n      return category.replace('featured-', '').trim();\n    });\n  }\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport { contentMaxWidth, hoverUnderline, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\n\nexport const Wrapper = styled.div`\n  min-height: 150px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const PostCard = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n  max-width: ${contentMaxWidth};\n  border-radius: 10px;\n  padding: 15px;\n  margin-bottom: 15px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${({ theme }) => theme.color.gray10};\n    @media ${MOBILE_MEDIA_QUERY} {\n      background-color: transparent;\n    }\n  }\n  @media ${MOBILE_MEDIA_QUERY} {\n    &:active {\n      background-color: ${({ theme }) => theme.color.gray10};\n    }\n  }\n`;\n\nexport const Title = styled.div`\n  /* font-size: 18px; */\n  font-size: 23px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  line-height: 1.4;\n`;\n\nexport const Description = styled.p`\n  /* font-size: 13px; */\n  font-size: 14px;\n  margin-bottom: 20px;\n  line-height: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  word-break: break-word;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  font-family: GmarketSansLight;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 13px;\n  width: 100%;\n  padding: 0 15px;\n  color: ${({ theme }) => theme.color.gray60};\n  font-family: GmarketSansLight;\n  position: absolute;\n  bottom: 25px;\n`;\n\nexport const Date = styled.div``;\n\nexport const Categories = styled.div`\n  display: flex;\n`;\n\nexport const Category = styled(Link)`\n  margin-left: 4px;\n  color: ${({ theme }) => theme.color.gray60};\n  ${({ theme }) => hoverUnderline(theme)};\n  &:after {\n    background-color: ${({ theme }) => theme.color.gray60};\n  }\n`;\n","import React from 'react';\n\nimport PostClass from '@/src/models/post';\n\nimport * as S from './styled';\n\ntype PostCardProps = {\n  post: PostClass;\n};\n\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\n  const { id, slug, title, excerpt, date, categories } = post;\n\n  return (\n    <S.Wrapper>\n      <S.PostCard key={id} to={slug}>\n        <S.Title className='title'>{title}</S.Title>\n        <S.Description dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </S.PostCard>\n      <S.Info>\n        <S.Date>{date}</S.Date>\n        <S.Categories>\n          {categories.map((category) => {\n            if (category !== 'featured')\n              return (\n                <S.Category to={`/posts/${category}`} key={category}>\n                  {category}\n                </S.Category>\n              );\n          })}\n        </S.Categories>\n      </S.Info>\n    </S.Wrapper>\n  );\n};\n\nexport default PostCard;\n","import styled from '@emotion/styled';\n\nimport { contentMaxWidth, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\n\nexport const CategoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const CategoryTitle = styled.div`\n  width: fit-content;\n  margin-bottom: 15px;\n  font-size: 30px;\n  text-align: center;\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    font-size: 25px;\n  }\n`;\n\nexport const CategorySubtitle = styled.div`\n  padding-bottom: 10px;\n  font-size: 20px;\n  text-align: center;\n  font-family: GmarketSansLight;\n`;\n\nexport const TabWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  top: 0px;\n  width: 100%;\n`;\n\nexport const Tabs = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  max-width: ${contentMaxWidth} + 40px;\n  margin-bottom: 12px;\n  gap: 24px;\n  overflow-y: hidden;\n  overflow-x: scroll;\n  @media ${MOBILE_MEDIA_QUERY} {\n    justify-content: flex-start;\n  }\n  padding: 0 15px;\n`;\n\nexport const Tab = styled.div<{ isSelected: 'true' | 'false' }>`\n  font-size: 17px;\n  cursor: pointer;\n  line-height: 50px;\n  color: ${({ isSelected, theme }) => (isSelected === 'true' ? theme.color.black100 : theme.color.gray60)};\n`;\n\nexport const PostCardsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n","import { navigate } from 'gatsby';\nimport React, { useEffect, useMemo, useRef } from 'react';\n\nimport PostCard from '@/src/components/PostCard';\nimport Seo from '@/src/components/Seo';\nimport Layout from '@/src/layout';\nimport PostClass from '@/src/models/post';\nimport { AllMarkdownRemark } from '@/src/type';\n\nimport * as S from './styled';\n\ntype PostsTemplateProps = {\n  location: Location;\n  pageContext: {\n    currentCategory: string;\n    categories: string[];\n    edges: AllMarkdownRemark['edges'];\n  };\n};\n\nconst PostsTemplate: React.FC<PostsTemplateProps> = ({ location, pageContext }) => {\n  const { edges, currentCategory } = pageContext;\n  const { categories } = pageContext;\n  const currentTabIndex = useMemo(\n    () => categories.findIndex((category) => category === currentCategory),\n    [categories, currentCategory],\n  );\n  const posts = edges.map(({ node }) => new PostClass(node));\n\n  const onTabIndexChange = (value: number) => {\n    if (value === 0) return navigate(`/posts`);\n    navigate(`/posts/${categories[value]}`);\n  };\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  // currentTab이 가운데에 오도록 스크롤\n  useEffect(() => {\n    if (!ref.current) return;\n    const currentTab = ref.current.children[currentTabIndex] as HTMLDivElement;\n    ref.current.scrollTo({ left: currentTab.offsetLeft - (ref.current.offsetWidth - currentTab.offsetWidth) / 2 });\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Seo title='MHLab | Posts' />\n      <S.CategoryWrapper>\n        <S.CategoryTitle>{categories[currentTabIndex]}</S.CategoryTitle>\n        <S.CategorySubtitle>{`${posts.length} post${posts.length < 2 ? '' : 's'}`}</S.CategorySubtitle>\n      </S.CategoryWrapper>\n\n      <S.TabWrapper>\n        <S.Tabs ref={ref}>\n          {categories.map((title, index) => (\n            <S.Tab\n              key={index}\n              isSelected={currentTabIndex === index ? 'true' : 'false'}\n              onClick={() => onTabIndexChange(index)}\n            >\n              {title}\n            </S.Tab>\n          ))}\n        </S.Tabs>\n\n        <S.PostCardsWrapper>\n          {posts.map((post, index) => (\n            <PostCard key={index} post={post} />\n          ))}\n        </S.PostCardsWrapper>\n      </S.TabWrapper>\n    </Layout>\n  );\n};\n\nexport default PostsTemplate;\n"],"names":["PostClass","node","id","html","excerpt","frontmatter","slug","fields","emoji","categories","title","author","date","categoryArr","split","this","filteredCategories","map","category","replace","trim","Wrapper","_styled","target","name","styles","PostCard","Link","contentMaxWidth","_ref","theme","color","gray10","MOBILE_MEDIA_QUERY","_ref2","Title","Description","Info","_ref3","gray60","Date","Categories","Category","_ref4","_ref5","hoverUnderline","_ref6","post","___EmotionJSX","S","key","to","className","dangerouslySetInnerHTML","__html","CategoryWrapper","CategoryTitle","CategorySubtitle","TabWrapper","Tabs","Tab","isSelected","black100","PostCardsWrapper","location","pageContext","edges","currentCategory","currentTabIndex","useMemo","findIndex","posts","ref","useRef","useEffect","current","currentTab","children","scrollTo","left","offsetLeft","offsetWidth","Layout","Seo","length","index","onClick","value","navigate","onTabIndexChange"],"sourceRoot":""}