{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring_spring-boot/180319_spring-boot-tls-certbot/","result":{"data":{"site":{"siteMetadata":{"title":"MHLab blog","author":"MHLab","siteUrl":"https://elfinlas.github.io","comment":{"disqusShortName":"","utterances":"elfinlas/blog_utterances"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"37ab201f-ad5b-50ea-bfcc-fd92a8dccba7","excerpt":"주의 이 문건은 과거 Hexo 블로그 (2018-03-19) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. Certbot으로 만든 인증서 사용하기 전의 포스팅인 Certbot으로 무료 인증서 발급 받기 에서 만든 인증서를 이용해 Spring Boot의 SSL을 적용하는 방법에 대해서 알아보겠습니다. 만약 Certbot으로 인증서를 만들지 않으신 분은 위의 포스팅 링크를 참고하여 만들어주시면 됩니다. PEM -> JKS 변환 먼저 Certbot…","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2018-03-19-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2018-03-19-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2018 03 19 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2018-03-19) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"certbot으로-만든-인증서-사용하기\" style=\"position:relative;\"><a href=\"#certbot%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%A0-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"certbot으로 만든 인증서 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Certbot으로 만든 인증서 사용하기</h1>\n<p>전의 포스팅인 <a href=\"http://elfinlas.github.io/letsencrypt/180319_certbot-ssl/\">Certbot으로 무료 인증서 발급 받기</a> 에서 만든 인증서를 이용해 Spring Boot의 SSL을 적용하는 방법에 대해서 알아보겠습니다.</p>\n<p>만약 Certbot으로 인증서를 만들지 않으신 분은 위의 포스팅 링크를 참고하여 만들어주시면 됩니다.</p>\n<br>\n<h2 id=\"pem---jks-변환\" style=\"position:relative;\"><a href=\"#pem---jks-%EB%B3%80%ED%99%98\" aria-label=\"pem   jks 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PEM -> JKS 변환</h2>\n<p>먼저 Certbot에서 인증서를 생성할 경우 총 4개의 파일이 certbot 경로에 생성되게 됩니다.</p>\n<p>다른 설정을 건들지 않았다면 <code class=\"language-text\">/etc/letsencrypt/live</code> 경로 밑에 도메인 이름으로 저장이 됩니다.</p>\n<p>만약 <strong>/etc/letsencrypt/</strong>까진 접근이 되지만 live 디렉토리에 접근 시 <code class=\"language-text\">-bash: cd: live/: Permission denied</code> 와 같은 권한 문제를 만날 경우 <code class=\"language-text\">sudo su</code> 등을 통해서 접근합니다.</p>\n<p>디렉토리 안에는 총 4개의 pem 파일이 생성되어 있습니다.</p>\n<ul>\n<li>privkey.pem : 개인키</li>\n<li>fullchain.pem : 내 기본 공개키 + 기타 정보를 포함한 공개 키 (Node Express 서버에서는 option의 cert에 이 파일 사용)</li>\n<li>cert.pem : 기본 공개키</li>\n<li>chain.pem : 기타 정보를 포함한 공개키(이것이 없으면 Firefox나 모바일 크롬에서 Https 미적용)</li>\n</ul>\n<p>이 파일들을 먼저 알맞은 곳으로 복사를 해줍니다.</p>\n<br>\n<h3 id=\"pkcs12로-변환하기\" style=\"position:relative;\"><a href=\"#pkcs12%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"pkcs12로 변환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PKCS12로 변환하기</h3>\n<p>복사를 하였으면, 해당 디렉토리로 이동 후 <strong>openssl</strong> 명령어를 수행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> openssl pkcs12 -export -in cert.pem -inkey privkey.pem -out cert_and_key.p12 -name ttp -CAfile chain.pem -caname root</code></pre></div>\n<p>쓰인 속성에 대한 설명은 아래를 참고하세요.</p>\n<ul>\n<li>export : PKCS#12 파일 생성</li>\n<li>in : 개인키 파일 이름 (p12에 들어갈 인증서)</li>\n<li>inkey : 포함시킬 개인키</li>\n<li>out : 생성될 p12 파일명</li>\n<li>name : Java에서 KeyStore로 접근시 alias항목이 되는 부분 (필수 입력)</li>\n<li>CAfile : 인증서 발급 체인(CA 인증서 묶음)</li>\n</ul>\n<br>\n<p>위 명령어를 실행하면 사용할 암호를 입력하는 커맨드가 뜹니다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Enter Export Password:\nVerifying - Enter Export Password:</code></pre></div>\n<br>\n<h3 id=\"keytool을-통해-jks-파일-만들기\" style=\"position:relative;\"><a href=\"#keytool%EC%9D%84-%ED%86%B5%ED%95%B4-jks-%ED%8C%8C%EC%9D%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"keytool을 통해 jks 파일 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keytool을 통해 jks 파일 만들기</h3>\n<p>openssl 명령어를 통해 <strong>cert<em>and</em>key.p12</strong> 파일이 생성되었다면 <strong>keytool</strong>명령어를 통해 jks파일을 만들어줍니다.</p>\n<blockquote>\n<p>keytool 명령어는 Keystore 기반으로 인증서와 키를 관리할 수 있는 커맨드 유틸리티이며 JDK에 포함되어 있습니다.<br>\nopenssl과 비슷한 용도로 사용됩니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> keytool -importkeystore -deststorepass [사용할 암호] -destkeypass [사용할 암호] -destkeystore [생성할 jks 파일명] -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -srcstorepass [PKCS12에서 사용한 암호] -alias [openssl에서 -name 속성에 입력한 이름]\n\n> Importing keystore cert_and_key.p12 to letsencrypt.jks...</code></pre></div>\n<p>이렇게 하면 현 디렉토리에 지정한 <strong>jks</strong>파일이 생성되게 됩니다.</p>\n<br>\n<h3 id=\"import-해주기\" style=\"position:relative;\"><a href=\"#import-%ED%95%B4%EC%A3%BC%EA%B8%B0\" aria-label=\"import 해주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import 해주기</h3>\n<p>그리고 마지막으로 생성된 파일을 임포트 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> keytool -import -trustcacerts -alias root -file chain.pem -keystore letsencrypt.jks\n> Enter keystore password: [openssl pkcs12 입력한 암호]\n> Certificate was added to keystore</code></pre></div>\n<p>이렇게 하면 pem 인증서를 jks 파일로 변환하고, 해당 변환된 파일을 keytool에 import까지 해주었습니다.<br>\n이후에는 <a href=\"http://elfinlas.github.io/spring_spring-boot/171129_springboot-https/\">Spring Boot에서 HTTPS 적용하기</a> 포스팅에 절차에 따라 등록하시면 됩니다.</p>\n<p>약간 변동사항이 있다면…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\tkey-store:\n\tkey-store-password:\n\tkey-password:</code></pre></div>\n<p>위 세가지 옵션만 사용하며, key-alias, trust-store, trust-store-password은 저 같은 경우 사용하지 않았습니다.</p>\n<br>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>포스팅을 위해 자료를 어느정도 모아두었지만, 정리하는 것은 힘드네요.<br>\n이 글을 보시고 도움이 되셨으면 합니다.</p>\n<p>감사합니다.</p>","frontmatter":{"title":"Certbot으로 만든 인증서를 Spring Boot에서 사용하기","date":"March 19, 2018"}}},"pageContext":{"slug":"/spring_spring-boot/180319_spring-boot-tls-certbot/","previous":{"fields":{"slug":"/letsencrypt/180319_certbot-ssl/"},"frontmatter":{"title":"Certbot으로 무료 인증서 발급"}},"next":{"fields":{"slug":"/thymeleaf/180422_thymeleaf-each-if/"},"frontmatter":{"title":"Thymeleaf에서 반복문(each) 안에 if문 사용하기"}}}}}