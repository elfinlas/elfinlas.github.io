{"componentChunkName":"component---src-templates-tag-jsx","path":"/tags/mongo-db/","result":{"data":{"allMarkdownRemark":{"totalCount":2,"nodes":[{"excerpt":"Chat GPT에게 코드를 맡기다가... MongoDB쪽에서 데이터를 가져오는 부분에 대해서 GPT에게 명령을 줬다. 근데 가져올 때 코드를 보니 신기한 게 있었다. 근데 GPT가 제공한 코드를 보면 끝에 **.exec()**를 사용한다. 그래서 이 부분에 대해 궁금했다. 쓰면서 딱히 문제는 안되었는데 이런 부분은 모르고 넘어가면 더 큰 문제가 발생할 수 있으니까? exec()는? 사실 exec()를 쓰고 안쓰고는 큰 차이는 없다. 왜냐하면 기능적으로는 완전히 동일하다. Mongoose에서 대부분의 쿼리 메서드는 exec()를 호출하지 않아도 잘 동작한다. 하지만 save() 같은 쿼리 메서드에는 붙이지 않는다. 근데 이게 Mogoose 3 버전대에서는 쿼리 메서드에서 사용하는 쿼리를 프로미스로 만들기 위해서는 exec()를 필수로 붙여줘야 했다. 하지만 4버전 이후부터는 자체적으로 처리를 하기 때문에 exec()를 붙이지 않아도 되게 되었다. 하지만 가독성과 다른 코드와의 일관성…","fields":{"slug":"/nest_js/230505_mongoose_exec/"},"frontmatter":{"title":"Mongoose 사용 시 exec()는 무엇인가?","description":null,"date":"2023-05-05T13:06:38.000Z","tags":["NestJs","MongoDB"],"series":"NestJs","previewImage":"nestjs_logo.jpg","isPrivate":null}},{"excerpt":"슬슬 데이터를 이동해볼까... 기존 개발 서버에서 쓰던 디비를 몇 가지 옮겨서 쓸 일이 있어서 찾아보다가... 또 잊을까봐 정리해두려고 쓰는 포스팅.. 구성은 Aws Ubuntu의 Docker 환경에서 진행하였다. MongoDb Backup 일단 Docker 안의 MongoDB에 접근해야 한다. 접근 명령어는 아래와 같이... 저 뒤의 mongo는 docker 컨테이너 이름인데 각자 알맞게 적어준다. Shell에 접근 후 전체 디비를 뜨는 경우 옵션을 안줘도 되지만, 나는 특정 디비만 백업하면 되는 것이라서 아래와 같이 명령어를 수행했다. 그리고 out뒤의 인자는 덤프를 뜬 뒤의 디렉토리를 정해주는건데 Shell 내부 디렉토리를 가리킨다. 만약 디비가 없는 경우 아래와 같이 에러가 나므로 주의 내 디비의 경우 계정 비밀번호가 있었는데 이 경우 아래와 같이 옵션을 주면 된다. 정상적으로 덤프를 따면 아래와 같이 덤프가 생성되고 담기게 된다. 이렇게 하면 백업 데이터가 backup 디…","fields":{"slug":"/mongodb/230118_mongo_dump/"},"frontmatter":{"title":"MongoDB 백업(Backup) & 복원(Restore) (With Docker)","description":null,"date":"2023-01-18T11:01:51.000Z","tags":["MongoDB"],"series":"MongoDB","previewImage":"mongo_logo.png","isPrivate":null}}]}},"pageContext":{"tag":"MongoDB"}},"staticQueryHashes":[],"slicesMap":{}}