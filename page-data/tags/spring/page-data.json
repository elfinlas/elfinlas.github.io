{"componentChunkName":"component---src-templates-tag-jsx","path":"/tags/spring/","result":{"data":{"allMarkdownRemark":{"totalCount":3,"nodes":[{"excerpt":"주의 이 문건은 과거 Hexo 블로그 (2018-04-26) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.  JS에서 값을 받으려 했더니... SpringBoot를 사용하여 JS에서 Json으로 서버측에 데이터를 보냈더니 아래와 같은 에러가 발생하였습니다. Could not read JSON: Can not deserialize instance of hello.Country[] out of START_OBJECT token 사실 제 로그는 아니고 검색해서 나온 로그입니다... (저장 해두는 것을 깜빡하여...) 저의 경우 이 문제가 일어난 케이스는 제가 개발 중인 사내정보시스템 기능 중 하나인 회의록 저장 기능이었습니다. 먼저 JS 단에서 전송하는 데이터는 아래와 같습니다. 저기 데이터 중에 member라는 값은 Select2의 값인데 이게 문제였습니다. 위의 값을 받는 데이터 중에 DTO를 사용하는데 아래와 같습니다. 위 코드는 일부 코…","fields":{"slug":"/spring_spring-boot/180426_spring-js-start-object-token/"},"frontmatter":{"title":"Spring에서 Js에서 데이터 받을 때 START_OBJECT token 에러 문제","description":null,"date":"2018-04-26T19:09:59.000Z","tags":["Spring"],"series":"Spring_SpringBoot","previewImage":"springboot_logo.jpg","isPrivate":null}},{"excerpt":"주의 이 문건은 과거 Hexo 블로그 (2018-02-18) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.  Spring에서 Controller의 전달인자... Spring을 사용하다 보면 Controller 단에서 클라이언트에서 URL에 파라메터를 같이 전달하는 경우가 있습니다. 주로 사용하는 형태는 아래의 두 가지가 대표적인 케이스입니다. Type 1 => http://127.0.0.1?index=1&page=2 Type 2 => http://127.0.0.1/index/1 Type 1의 경우 파라메터의 값과 이름을 함께 전달하는 방식으로 게시판 등에서 페이지 및 검색 정보를 함께 전달하는 방식을 사용할 때 많이 사용합니다. Type 2의 경우 Rest api에서 값을 호출할 때 주로 많이 사용합니다. Spring에서는 이러한 전달인자를 처리하는데 두 가지 방법을 제공합니다. @RequestParam 사용하기 Type 1의 URL을 처…","fields":{"slug":"/spring_spring-boot/180218_spring-parameter/"},"frontmatter":{"title":"Spring에서 @RequestParam과 @PathVariable","description":null,"date":"2018-02-18T19:10:14.000Z","tags":["Spring"],"series":"Spring_SpringBoot","previewImage":"springboot_logo.jpg","isPrivate":null}},{"excerpt":"주의 이 문건은 과거 Hexo 블로그 (2017-12-21) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.  Spring에서 설정파일을 감추고 싶다... Spring Framework를 이용하여 프로젝트를 진행할 때 데이터베이스 정보나 기타 민간함 정보를 설정파일에 작성하게 됩니다. 물론 Java Config를 사용하게 된다면 상관 없지만, 저는 주로 application.yml(또는 application.properties)을(를) 사용합니다. 문제는 이 설정파일의 경우 배포 시 노출이 되어 보안에 문제가 생길 수 있습니다. (물론 Java Config도 100% 안전한 것은 아니지만...) 그래서 이런 고민을 해결해 줄 라이브러리를 하나 소개하려 합니다. Jsaypt(Java Simplified Encryption) 를 써보자 Jasypt는 위에서 언급했던 문제를 해결해주는 자바 라이브러리입니다. 좀 더 자세한 내용은 Jasypt 공식…","fields":{"slug":"/spring_spring-boot/171221_jsaypt/"},"frontmatter":{"title":"Spring에서 설정파일(properties) 암호화 하기 (with jasypt)","description":null,"date":"2017-12-21T10:25:09.000Z","tags":["Spring"],"series":"Spring_SpringBoot","previewImage":"springboot_logo.jpg","isPrivate":null}}]}},"pageContext":{"tag":"Spring"}},"staticQueryHashes":[],"slicesMap":{}}