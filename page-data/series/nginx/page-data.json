{"componentChunkName":"component---src-templates-series-jsx","path":"/series/nginx/","result":{"data":{"allMarkdownRemark":{"totalCount":3,"nodes":[{"excerpt":"서비스를 열어두면... 오픈을 하고나면 정말 많은 일들이 생긴다. 도메인 주소를 어떻게 알고 이상한 메일들도 오고, 다양한 방법으로 연락이 온다. -_-;; 그래봤자 넷상이니까? 근데 이제 서비스 접근 로그 또는 nginx에 접근 로그를 보면 대환장 파티다. 이건 내 Nginx 접근 기록에서 따온 로그 중 일부다. 저기 109.237.98.53IP 접근을 보라. 파이썬이나 기타 언어로 봇 만들어서 취약점을 열심히 찾는... 참 부지런하다... 난 게을러서 저런 노력도 못할 듯 싶다 -_-;; 무튼 서비스가 오픈되면 어떻게들 귀신같이 알고 저렇게 온다.  무튼 예전부터 나는 이걸 보호할 방법을 찾았고 적용했었다. 그리고 포스팅 해야지 하다가..(아마 흑우집합소 1세대쯤이었...) 그래서 이걸 이제야 포스팅 해본다. How To? 일단 nginx가 설치되어 있다는 것을 가정한다. nginx의 기본 설정 파일을 vim이던 원하는 편집기로 연다. 보통은 경로가 /etc/nginx/ngin…","fields":{"slug":"/nginx/230401_defense_attacker/"},"frontmatter":{"title":"Nginx에서 특정 IP 접근 금지 시키기 (With Url 문자열 접근 막기)","description":null,"date":"2023-04-01T01:04:53.000Z","tags":["Nginx"],"series":"Nginx","previewImage":"nginx_logo.webp"}},{"excerpt":"파일 업로드를 했는데... 흑우집합소를 개발하고, 로컬에서 잘 되던 파일 업로드 기능이 이상하게 배포만 하면 에러가 났다. -_-;; Nest.Js의 서버측에서는 파일 사이즈를 분명 설정하고 잘 맞춰뒀는데 왜 그런 에러가 발생하는지 이유가 궁금했다...  에러는 복잡했는데 Status코드가 413이 돌아왔다. 이 에러 코드는 클라이언트에서 보낸 요청의 크기가 서버에서 설정한 최대 한도를 초과해서 발생하는 문제다. 근데 서버는 분명 설정을 해뒀으니 누가 문제일까? 역시 범인은 Nginx였다. 처리방법은? 몹시 간단하다. Nginx의 설정 값 중 client_max_body_size 값을 지정해주면 된다. (마크다운 문법 에러 때문에 _ 조심) client_max_body_size 설정하기 nginx의 설치된 경로에 별도로 바꾸지 않았다면, nginx.conf파일을 열고 아래와 같이 값을 입력해준다. 이렇게 처리하면 잘 될 것이다. 만약 위에 client_max_body_size 옵션…","fields":{"slug":"/nginx/230331_file_upload_size/"},"frontmatter":{"title":"Nginx에서 파일 업로드 사이즈 용량 처리","description":null,"date":"2023-03-31T15:03:07.000Z","tags":["Nginx"],"series":"Nginx","previewImage":"nginx_logo.webp"}},{"excerpt":"분명 로컬에서는 잘 되었는데... 흑우집합소 개발이 다 되서 프로덕션 환경에서 배포 후 처리를 하는데 로그인 부분이 제대로 되지 않았다. 왜 그런가 콘솔 로그까지 찍어가며 확인해본 결과 헤더의 특정 값이 전달되지 않았다. 그래서 찾아보니... Nginx는 기본 헤더나 잘 알려진 기본 헤더 값만 전송한다고 한다. 기본 Http 헤더는 모질라 개발 문서를 참고하자. 무튼 어떻게 해야 하나 방법을 찾아보니 의외로 간단했다. How to? 참고로 난 Http로 오면 https로 포워딩하고, 내부 프론트엔드를 바라보게 되어있다. 그리고 설정은 다 못까지만 일부는 오픈한다. 또한 Ubuntu 환경에서 진행한다. 먼저 정답을 이야기 하면 두 가지 옵션을 넣으면 된다. underscores_in_headers 와 proxy_pass_request_headers 옵션이다. 설명을 이어나가면... nginx.conf 또는 자신의 별도 설정 파일에서 포워딩하는 부분을 찾는다. 아래는 80에서 443으…","fields":{"slug":"/nginx/230330_nginx_header/"},"frontmatter":{"title":"Nginx에서 헤더 전달하기 (프록시 사용)","description":null,"date":"2023-03-30T21:04:09.000Z","tags":["Nginx"],"series":"Nginx","previewImage":"nginx_logo.webp"}}]}},"pageContext":{"series":"Nginx"}},"staticQueryHashes":[],"slicesMap":{}}