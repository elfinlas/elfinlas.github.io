{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/180211_javacollectionduplicate/","result":{"data":{"site":{"siteMetadata":{"title":"MHLab blog","author":"MHLab","siteUrl":"https://elfinlas.github.io","comment":{"disqusShortName":"","utterances":"elfinlas/blog_utterances"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"63372369-b396-515c-838d-cfa04394a61e","excerpt":"주의 이 문건은 과거 Hexo 블로그 (2018-02-11) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. 너무 오랜만의 포스팅?? 간만에 작성을 하는 포스팅입니다. 요새 너무 정신없이 바빠져서 포스팅을 할 기회가 없었습니다. 계속 포스팅을 꾸준하게 해야 하지만…노오력을 해야 겠네요 ㅠ 근황은 근화이고 포스팅은 해야겠죠? Java에서 컬렉션에서 중복 제거 요새 Java…","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2018-02-11-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2018-02-11-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2018 02 11 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2018-02-11) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"너무-오랜만의-포스팅\" style=\"position:relative;\"><a href=\"#%EB%84%88%EB%AC%B4-%EC%98%A4%EB%9E%9C%EB%A7%8C%EC%9D%98-%ED%8F%AC%EC%8A%A4%ED%8C%85\" aria-label=\"너무 오랜만의 포스팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>너무 오랜만의 포스팅??</h1>\n<p>간만에 작성을 하는 포스팅입니다.</p>\n<p>요새 너무 정신없이 바빠져서 포스팅을 할 기회가 없었습니다.</p>\n<p>계속 포스팅을 꾸준하게 해야 하지만…노오력을 해야 겠네요 ㅠ</p>\n<p>근황은 근화이고 포스팅은 해야겠죠?</p>\n<h1 id=\"java에서-컬렉션에서-중복-제거\" style=\"position:relative;\"><a href=\"#java%EC%97%90%EC%84%9C-%EC%BB%AC%EB%A0%89%EC%85%98%EC%97%90%EC%84%9C-%EC%A4%91%EB%B3%B5-%EC%A0%9C%EA%B1%B0\" aria-label=\"java에서 컬렉션에서 중복 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java에서 컬렉션에서 중복 제거</h1>\n<p>요새 Java 개발에 빠져서 허우적 중인데 개발을 하다 보면 데이터를 컬렉션에 담아서 처리하는 경우가 많습니다.</p>\n<p>그리고 그 컬렉션에 중복된 데이터가 발생하는 문제가 있었는데 이런 문제를 해결하기 위한 방법을 알아보겠습니다.</p>\n<p>먼저 예를 위해서 아래의 컬렉션을 사용하도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> intList <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> strList <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"222\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"222\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>최종 결과는 다음과 같이 나오게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">intList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nstrList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">222</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> abc<span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h2 id=\"step-1-hashset을-사용하여-중복-제거하기\" style=\"position:relative;\"><a href=\"#step-1-hashset%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A4%91%EB%B3%B5-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-label=\"step 1 hashset을 사용하여 중복 제거하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1. HashSet을 사용하여 중복 제거하기</h2>\n<p>Java의 컬렉션 중 <strong>Set</strong> 컬렉션 중 하나인 <strong>HashSet</strong>을 통해서 제거하는 방법입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span> result1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">(</span>intList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span> result2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">(</span>strList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>중복된 컬렉션을 <strong>HashSet</strong>에 넣게 되면 <strong>Set</strong> 컬렉션 특성 상 중복된 자료는 제거됩니다.<br>\n이렇게 중복된 결과를 다시 <strong>ArrayList</strong>로 넣게 되면 중복된 자료는 사라지게 됩니다.</p>\n<p>하지만 이 방법은 썩 좋은 방법은 아닌 것 같습니다.<br>\n기존 중복된 자료형을 HashSet으로 변경 후 다시 ArrayList로 변경하는 것은 부담이 됩니다.</p>\n<br>\n<h2 id=\"step-2-java8의-stream을-사용하기\" style=\"position:relative;\"><a href=\"#step-2-java8%EC%9D%98-stream%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"step 2 java8의 stream을 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2. Java8의 Stream을 사용하기</h2>\n<p>Java8은 7과 비교하여 다양한 것이 추가되고 변경이 되었습니다.<br>\n이 중 <strong>Stream</strong>의 <strong>distinct()</strong> 메서드를 활용하여 중복을 제거할 수 있게 되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span> result1 <span class=\"token operator\">=</span> intList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span> result2 <span class=\"token operator\">=</span> strList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>stream</strong>의 <strong>distinct()</strong>를 사용하게 되면 중복된 값을 제거하게 됩니다.<br>\n그리고 <strong>collect()</strong>를 통해 List로 반환하게 되면 아주 깔끔하게 처리할 수 있게 됩니다.</p>\n<br>\n<h1 id=\"결론java8\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0java8\" aria-label=\"결론java8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론…Java8!</h1>\n<p>개인적으로 <strong>Step2</strong> 방법으로 컬렉션의 중복자료를 제거하는 방법을 사용하는게 좋은 것 같습니다.</p>\n<p>이런 비슷한 고민을 하시는 분들에게 좋은 자료가 되었으면 합니다.<br>\n요새 오픈소스 및 회사 업무를 진행하느라 바쁘지만…꾸준히 포스팅을 다시 해보도록 하겠습니다!</p>\n<p>추운데 감기 조심하시고, 방문해주셔서 감사합니다!</p>","frontmatter":{"title":"Java에서 컬렉션의 중복을 제거하는 방법","date":"February 11, 2018"}}},"pageContext":{"slug":"/java/180211_javacollectionduplicate/","previous":{"fields":{"slug":"/android/171225_android_fcm/"},"frontmatter":{"title":"Android에서 FCM 푸시 사용하기"}},"next":{"fields":{"slug":"/thymeleaf/180216_thymeleaf-layout-dialect_exam/"},"frontmatter":{"title":"Thymeleaf에서 템플릿 형식으로 사용하기(With thymeleaf-layout-dialect)"}}}},"staticQueryHashes":["3128451518","903436796"]}