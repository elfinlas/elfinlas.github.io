{"componentChunkName":"component---src-templates-post-template-index-tsx","path":"/java/171031_javabean/","result":{"data":{"cur":{"id":"770cacde-ed8b-59a8-ab99-98cf669bf8b6","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2017-10-31-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-10-31-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2017 10 31 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2017-10-31) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"java-bean-이란\" style=\"position:relative;\"><a href=\"#java-bean-%EC%9D%B4%EB%9E%80\" aria-label=\"java bean 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java Bean 이란?</h1>\n<p>처음 자바 개발을 하다가 <strong>Java Bean</strong>이란 용어를 듣게 되었습니다.<br>\n구글에서 다양한 블로그에서 검색을 하여 찾아보았고, 이것을 정리하여 블로그 포스팅을 하게 되었습니다.</p>\n<br>\n<h3 id=\"java-bean의-정의\" style=\"position:relative;\"><a href=\"#java-bean%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-label=\"java bean의 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java Bean의 정의</h3>\n<ul>\n<li>데이터를 표현하는 것을 목적으로 하는 자바 클래스.</li>\n<li>컴포넌트와 비슷한 의미로도 사용된다.</li>\n<li>JavaBean 규격서에 따라 작성된 자바 클래스를 가리킨다.</li>\n</ul>\n<br>\n<h3 id=\"java-bean의-규격\" style=\"position:relative;\"><a href=\"#java-bean%EC%9D%98-%EA%B7%9C%EA%B2%A9\" aria-label=\"java bean의 규격 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java Bean의 규격</h3>\n<ul>\n<li>클래스는 패키지화 하여야 한다.</li>\n<li>멤버변수는 프로퍼티(Property)라 칭한다.</li>\n<li>클래스는 필요에 따라 직렬화가 가능하다.</li>\n<li>프로퍼티의 접근자는 private이다.</li>\n<li>프로퍼티마다 getter/setter 가 존재해야 하며, 그 이름은 각각 get/set으로 시작해야 한다.</li>\n<li>위의 프로퍼티 getter/setter 메서드의 접근자는 public이어야 한다.</li>\n<li>외부에서 프로퍼티에 접근은 메서드를 통해서 접근한다.</li>\n<li>프로퍼티는 반드시 읽기/쓰기가 가능해야 하지만, 읽기 전용인 경우 getter만 정의할 수 있다.</li>\n<li>getter의 경우 파라미터가 존재하지 않아야 하고, setter의 경우 한 개 이상의 파라미터가 존재한다.</li>\n<li>프로퍼티의 형이 boolean일 경우 get 메서드 대신 is메서드를 사용해도 된다.</li>\n</ul>\n<br>\n<h3 id=\"java-bean의-형태-예제\" style=\"position:relative;\"><a href=\"#java-bean%EC%9D%98-%ED%98%95%ED%83%9C-%EC%98%88%EC%A0%9C\" aria-label=\"java bean의 형태 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java Bean의 형태 예제</h3>\n<p>형태는 아래의 소스코드를 참고해주시길…</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> 패키지_명<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">import</span> 패키지_명<span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Bean_ClassName</span> <span class=\"token punctuation\">[</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>Serializable</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 값을 저장하는 속성 정의(필드)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Bean_ClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>    <span class=\"token comment\">// 기본 생성자</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">// 필드 값을 읽어오는 메소드</span>\n\t\t<span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">// 필드 값을 저장하는 메소드</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-10-31-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\">이 문건은 과거 Hexo 블로그 (2017-10-31) 에서 이동된 문서입니다.</a></p>\n<ul>\n<li><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\">시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#java-bean%EC%9D%98-%EC%A0%95%EC%9D%98\">Java Bean의 정의</a></p>\n</li>\n<li>\n<p><a href=\"#java-bean%EC%9D%98-%EA%B7%9C%EA%B2%A9\">Java Bean의 규격</a></p>\n</li>\n<li>\n<p><a href=\"#java-bean%EC%9D%98-%ED%98%95%ED%83%9C-%EC%98%88%EC%A0%9C\">Java Bean의 형태 예제</a></p>\n</li>\n</ul>\n</div>","excerpt":"주의 이 문건은 과거 Hexo 블로그 (2017-10-31) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. Java Bean 이란? 처음 자바 개발을 하다가 Java Bean이란 용어를 듣게 되었습니다. 구글에서 다양한 블로그에서 검색을 하여 찾아보았고, 이것을 정리하여 블로그 포스팅을 하게 되었습니다. Java Bean의 정의 데이터를 표현하는 것을 목적으로 하는 자바 클래스. 컴포넌트와 비슷한 의미로도 사용된다. JavaBean 규격서에 따라 작성된 자바 클래스를 가리킨다. Java Bean의 규격 클래스는 패키지화 하여야 한다. 멤버변수는 프로퍼티(Property)라 칭한다. 클래스는 필요에 따라 직렬화가 가능하다. 프로퍼티의 접근자는 private이다. 프로퍼티마다 getter/setter 가 존재해야 하며, 그 이름은 각각 get/set으로 시작해야 한다. 위의 프로퍼티 getter/setter 메서드의 접근자는 public이어야…","frontmatter":{"date":"2017.10.31","title":"Java Bean이란?","categories":"java","emoji":"📜"},"fields":{"slug":"/java/171031_javabean/"}},"next":{"id":"636d4b53-24dd-5ea9-89dd-8dfd22fd6747","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2017-02-14-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-02-14-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2017 02 14 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2017-02-14) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"java에서-어노테이션annotation-이란\" style=\"position:relative;\"><a href=\"#java%EC%97%90%EC%84%9C-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98annotation-%EC%9D%B4%EB%9E%80\" aria-label=\"java에서 어노테이션annotation 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java에서 어노테이션(Annotation) 이란?</h1>\n<p>자바 개발을 하다 보면 클래스 또는 메서드 또는 변수 앞에 <strong>@Override</strong> 같은 <strong>@</strong> 표시를 많이 봤을 것입니다.<br>\n이 어노테이션은 JEE5(Java Platform, Enterprise Edition 5)부터 새롭게 추가된 요소입니다.</p>\n<p>이 어노테이션으로 인해 데이터의 유효성 검사 등을 쉽게 알 수 있고, 이와 관련한 코드가 깔끔해지게 됩니다.<br>\n일단 어노테이션의 용도는 다양한 목적이 있지만 <strong>메타 데이터</strong>의 비중이 가장 크다 할 수 있습니다.</p>\n<blockquote>\n<p>메타-테이터(Meta-Data) : 데이터를 위한 데이터를 의미하며, 풀어 이야기하면 한 데이터에 대한 설명을 의미하는 데이터. (자신의 정보를 담고 있는 데이터)</p>\n</blockquote>\n<h3 id=\"java에서-기본적으로-제공하는-어노테이션-종류\" style=\"position:relative;\"><a href=\"#java%EC%97%90%EC%84%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EC%A2%85%EB%A5%98\" aria-label=\"java에서 기본적으로 제공하는 어노테이션 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java에서 기본적으로 제공하는 어노테이션 종류</h3>\n<ol>\n<li>\n<p><strong>@Override</strong></p>\n<ul>\n<li>선언한 메서드가 오버라이드 되었다는 것을 나타냅니다.</li>\n<li>만약 상위(부모) 클래스(또는 인터페이스)에서 해당 메서드를 찾을 수 없다면 컴파일 에러를 발생 시킵니다.</li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li>\n<p><strong>@Deprecated</strong></p>\n<ul>\n<li>해당 메서드가 더 이상 사용되지 않음을 표시합니다.</li>\n<li>만약 사용할 경우 컴파일 경고를 발생 키십니다.</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li>\n<p><strong>@SuppressWarnings</strong></p>\n<ul>\n<li>선언한 곳의 컴파일 경고를 무시하도록 합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>@SafeVarargs</strong></p>\n<ul>\n<li>Java7 부터 지원하며, 제너릭 같은 가변인자의 매개변수를 사용할 때의 경고를 무시합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>@FunctionalInterface</strong></p>\n<ul>\n<li>Java8 부터 지원하며, 함수형 인터페이스를 지정하는 어노테이션입니다.</li>\n<li>만약 메서드가 존재하지 않거나, 1개 이상의 메서드(default 메서드 제외)가 존재할 경우 컴파일 오류를 발생 시킵니다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"어노테이션은-어떻게-구성되어-있을까\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"어노테이션은 어떻게 구성되어 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어노테이션은 어떻게 구성되어 있을까?</h2>\n<p>먼저 어노테이션의 구조를 보기 위해서 아래의 코드를 참고해 봅니다. (예를 위해 작성된 커스텀 어노테이션입니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">METHOD</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">CustomAnnotation</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">boolean</span> <span class=\"token function\">isCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>먼저 1번, 2번의 어노테이션 선언에 쓰인 어노테이션은 **메타 어노테이션(Meta Annotation)**이라 하며 이를 이용해 커스텀 어노테이션을 작성할 수 있게 됩니다.</p>\n<h3 id=\"메타-어노테이션의-종류\" style=\"position:relative;\"><a href=\"#%EB%A9%94%ED%83%80-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"메타 어노테이션의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메타 어노테이션의 종류</h3>\n<ol>\n<li>\n<p><strong>@Retention</strong></p>\n<ul>\n<li>자바 컴파일러가 어노테이션을 다루는 방법을 기술하며, 특정 시점까지 영향을 미치는지를 결정합니다.</li>\n<li>종류는 다음과 같습니다. - <strong>RetentionPolicy.SOURCE</strong> : 컴파일 전까지만 유효. (컴파일 이후에는 사라짐) - <strong>RetentionPolicy.CLASS</strong> : 컴파일러가 클래스를 참조할 때까지 유효. - <strong>RetentionPolicy.RUNTIME</strong> : 컴파일 이후에도 JVM에 의해 계속 참조가 가능. (리플렉션 사용)</li>\n</ul>\n</li>\n<li>\n<p><strong>@Target</strong></p>\n<ul>\n<li>\n<p>어노테이션이 적용할 위치를 선택합니다.</p>\n</li>\n<li>\n<p>종류는 다음과 같습니다.</p>\n<ul>\n<li>ElementType.PACKAGE : 패키지 선언\n<ul>\n<li>ElementType.TYPE : 타입 선언</li>\n<li>ElementType.ANNOTATION_TYPE : 어노테이션 타입 선언</li>\n<li>ElementType.CONSTRUCTOR : 생성자 선언</li>\n<li>ElementType.FIELD : 멤버 변수 선언</li>\n<li>ElementType.LOCAL_VARIABLE : 지역 변수 선언</li>\n<li>ElementType.METHOD : 메서드 선언</li>\n<li>ElementType.PARAMETER : 전달인자 선언</li>\n<li>ElementType.TYPE_PARAMETER : 전달인자 타입 선언</li>\n<li>ElementType.TYPE_USE : 타입 선언</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li>\n<p><strong>@Documented</strong></p>\n<ul>\n<li>해당 어노테이션을 Javadoc에 포함시킵니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>@Inherited</strong></p>\n<ul>\n<li>어노테이션의 상속을 가능하게 합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>@Repeatable</strong></p>\n<ul>\n<li>Java8 부터 지원하며, 연속적으로 어노테이션을 선언할 수 있게 해줍니다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<p>어노테이션은 기본적으로 인터페이스 형태를 취하고 있으며, 단지 interface 앞에 <strong>@</strong> 표시를 해줍니다.<br>\n어노테이션의 필드에서는 <strong>enum</strong>, String이나 기본 자료형, 기본 자료형의 배열을 사용할 수 있습니다.</p>\n<p>어노테이션에 대한 이론적인 부분은 여기까지이며, 이를 활용하여 커스텀 어노테이션을 작성하는 것은 다음 포스트에서 다루도록 하겠습니다.</p>\n<p><a href=\"https://elfinlas.github.io/java/171214_java-custom-anotation-01/\">커스텀 어노테이션 만들고 사용하기</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-02-14-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\">이 문건은 과거 Hexo 블로그 (2017-02-14) 에서 이동된 문서입니다.</a></p>\n<ul>\n<li><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\">시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#java%EC%97%90%EC%84%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EC%A2%85%EB%A5%98\">Java에서 기본적으로 제공하는 어노테이션 종류</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4-%EC%9E%88%EC%9D%84%EA%B9%8C\">어노테이션은 어떻게 구성되어 있을까?</a></p>\n<ul>\n<li><a href=\"#%EB%A9%94%ED%83%80-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%98-%EC%A2%85%EB%A5%98\">메타 어노테이션의 종류</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2017.02.14","title":"Java에서 어노테이션(Annotation)이란?","categories":"java","emoji":"📜"},"fields":{"slug":"/java/171214_java-annotation/"}},"prev":{"id":"c50e0990-de2d-5749-ae38-2b97228d6944","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2017-10-31-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-10-31-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2017 10 31 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2017-10-31) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"문서를-시작하면서\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%84%9C%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\"문서를 시작하면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문서를 시작하면서…</h1>\n<p>Java를 사용할 때 본인의 경우 가장 많이 사용하는 클래스는 아무래도 <strong>String</strong>이 아닐까 싶습니다.</p>\n<p><strong>String</strong>을 쓰다보면 문자열을 새로 문자열을 넣거나 또는 변경을 하는 경우 <strong>subString() 또는 split()</strong> 를 주로 사용합니다.</p>\n<p>이것을 찾다보면 같이 마주치는 것은 <strong>StringBuffer</strong> 또는 <strong>StringBuilder</strong>가 있을 것입니다.</p>\n<p>아마 <strong>면접질문</strong> <b>(신입 또는 주니어급 개발자)</b>으로 저 세 가지의 차이점을 물어보는 경우가 많을 것입니다.</p>\n<p>이번 포스팅을 통해서 한번 정리를 해보려 합니다.</p>\n<br>\n<h2 id=\"java의-string\" style=\"position:relative;\"><a href=\"#java%EC%9D%98-string\" aria-label=\"java의 string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java의 String.</h2>\n<p>이번 포스팅에서는 Java의 <strong>String</strong>을 집중적으로 포커싱을 하는 글은 아니니 간략하게만 확인하고 넘어가도록 하겠습니다.</p>\n<p><strong>String</strong>은 일단 **불가변적(Immutable)**입니다.</p>\n<p>이걸 쉽게 설명하자면 값을 변경하는 것이 불가능하다는 이야기입니다.</p>\n<p>하지만 우리는 이런 사실을 잊고 아래와 같이 자연스럽게 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> testStr <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\ntestStr <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello One\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 선언 중 첫 번째 줄에서는 testStr에 “Hello World”라는 문자열의 값이 들어가게 됩니다.</p>\n<p>하지만 두번 째 라인에서는 testStr에는 “Hello One” 문자열이 들어갑니다.</p>\n<p>위와 같은 작업을 할 때는 기존의 testStr 객체의 메모리 공간에 “Hello World”의 내용을 변경하는 것이 아닌,<br>\n<strong>기존의 공간에서 새로운 공간을 할당한 후</strong> 문자열을 생성합니다.</p>\n<p>결국 저장된 문자열을 변경하는 것이 아닌 <strong>새로운 객체를 만들어서 반환</strong>하는 것입니다.</p>\n<p>이것을 가리켜 <strong>불가변적(Immutable) 이다</strong> 라고 표현합니다.</p>\n<p>물론 이 <b>불가변적(Immutable)</b>인 객체는 사용이 간단하고, 멀티 쓰레드 환경에서 자유롭게 쓸 수 있는 장점이 있지만,<br>\n<strong>엄청난 양의 문자열을 변경하거나 치환을 하는 작업</strong>을 하게 될 경우 효율에 문제가 생길 수 있음을 예상할 수 있습니다.</p>\n<p>이런 문제를 봉착하게 되면 우리는 검색할 때 다음의 키워드를 확인하게 됩니다.</p>\n<br>\n<h2 id=\"stringbuffer-stringbuilder-우리는-string의-친척\" style=\"position:relative;\"><a href=\"#stringbuffer-stringbuilder-%EC%9A%B0%EB%A6%AC%EB%8A%94-string%EC%9D%98-%EC%B9%9C%EC%B2%99\" aria-label=\"stringbuffer stringbuilder 우리는 string의 친척 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringBuffer, StringBuilder. 우리는 String의 친척</h2>\n<p>위에서 확인한 <strong>String</strong> 의 경우 문자열 <strong>변경</strong>을 하는 것이 아닌 새로 객체를 <strong>생성하여 반환함</strong>을 확인하였습니다.</p>\n<p>만약 당신이 엄청난 문자열 연산을 하게 될 예정이라면 지금 소개하는 <strong>StringBuffer</strong> 또는 <strong>StringBuilder</strong>를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">StringBuffer</span> testStr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Wolrd\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntestStr<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 경우는 <strong>StringBuffer</strong>로 생성한 testStr을 delete 메서드를 사용하여 문자열을 변경한 예제입니다.</p>\n<p>testStr의 경우 결국 “Hello” 라는 문자열만 남게 될 것입니다.</p>\n<p>즉 새롭게 생성을 하는 것이 아닌 기존의 객체에서 문자열 변경을 하는 것입니다.</p>\n<p>이 <strong>StringBuffer</strong>나 <strong>StringBuilder</strong>의 경우 문자열 연산을 진행하며 버퍼 공간이 부족한 경우, 기존의 버퍼 크기를 늘리며 동작합니다.</p>\n<p>만약 <strong>작은 규모의 String</strong>의 문자열 변경의 경우 자꾸 변경할 경우 문자열 객체를 만들고 지우고를 반복하니<br>\n성능에 문제가 있지 않을까 싶지만…</p>\n<p>이런 경우 그냥 <strong>String</strong>을 사용해도 무방합니다.</p>\n<p>변경을 위한 연산을 진행하는 비용보다 새로 메모리 공간을 할당해서 사용하는 비용이 더 낮기 때문입니다.</p>\n<p>위에서도 이야기 하였지만 엄청난 문자열 변경 연산을 할 경우에만 <strong>StringBuffer</strong>, <strong>StringBuilder</strong>를 사용하는 것이 좋습니다.</p>\n<br>\n<h2 id=\"stringbuffer-stringbuilder-너희-둘의-차이점\" style=\"position:relative;\"><a href=\"#stringbuffer-stringbuilder-%EB%84%88%ED%9D%AC-%EB%91%98%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"stringbuffer stringbuilder 너희 둘의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringBuffer, StringBuilder 너희 둘의 차이점?</h2>\n<p>그런데 이 두 가지의 차이점은 무엇일까요?</p>\n<p><strong>StringBuffer</strong>의 경우 <b>동기화(Synchronization)를 보장</b>하고,<br>\n<strong>StringBuilder</strong>의 경우 <b>동기화(Synchronization)를 보장하지 않습니다.</b>.</p>\n<p>즉 <strong>Multi Thread</strong> 환경에서는 <strong>StringBuffer</strong> 를 사용하고,<br>\n<strong>Single Thread</strong> 환경에서는 <strong>StringBuilder</strong>를 사용하면 됩니다.</p>\n<br>\n<h2 id=\"새로운-부분\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B6%80%EB%B6%84\" aria-label=\"새로운 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 부분</h2>\n<p>과거 JDK 1.5 버전에서는 String에서 문자열 연산(+, concat 등)을 할 때 성능상의 이슈가 있었지만,<br>\nJDK1.5 버전 이후부터는 컴파일 단계에서 String 객체의 문자열 연산을 사용할 경우 StringBuilder로 컴파일 되도록 변경되었습니다.</p>\n<br>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p><strong>String</strong>은 짧은 문자열을 더하거나, 간단한 문자열 처리를 할 때 사용하고,<br>\n<strong>StringBuffer</strong>는 쓰레드에 안전한 프로그램이 필요할 때나, 개발 중인 시스템의 부분이 쓰레드에 안전한지 모를 경우 사용합니다.\n<strong>StringBuilder</strong>는 쓰레드에 안전성 여부에 관계가 없는 소프트웨어를 개발할 때 사용합니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-10-31-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\">이 문건은 과거 Hexo 블로그 (2017-10-31) 에서 이동된 문서입니다.</a></p>\n<ul>\n<li><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\">시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#java%EC%9D%98-string\">Java의 String.</a></p>\n</li>\n<li>\n<p><a href=\"#stringbuffer-stringbuilder-%EC%9A%B0%EB%A6%AC%EB%8A%94-string%EC%9D%98-%EC%B9%9C%EC%B2%99\">StringBuffer, StringBuilder. 우리는 String의 친척</a></p>\n</li>\n<li>\n<p><a href=\"#stringbuffer-stringbuilder-%EB%84%88%ED%9D%AC-%EB%91%98%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">StringBuffer, StringBuilder 너희 둘의 차이점?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B6%80%EB%B6%84\">새로운 부분</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2017.10.31","title":"Java의 String, StringBuffer, String Builder에 대하여","categories":"java","emoji":"📜"},"fields":{"slug":"/java/171031_javastrings/"}},"site":{"siteMetadata":{"siteUrl":"https://elfinlas.github.io","comments":{"utterances":{"repo":"elfinlas/blog_utterances"}},"projects":[{"title":"마와셀(웹) - 와인 가격 비교","description":"와인 가격 비교 서비스","techStack":["Typescript","React","Next.Js","Nest.Js"],"thumbnailUrl":"myc_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223393940649","github":"","web":"https://appmyc.info","googlePlay":"","appStore":""}},{"title":"마와셀(엡) - 와인과 셀러 관리, 시음노트","description":"보유한 와인의 관리, 시음노트 작성, 보유 와인 셀러의 관리 어플리케이션","techStack":["Dart","Flutter","hive","provider"],"thumbnailUrl":"myc_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223531933037","github":"","web":"","googlePlay":"https://play.google.com/store/apps/details?id=dev.mhlab.myc","appStore":"https://itunes.apple.com/kr/app/apple-store/6474965246"}},{"title":"흑우집합소(웹) - 로또번호 추천 서비스","description":"로또번호 추천 서비스","techStack":["Typescript","React","Next.Js","Nest.Js"],"thumbnailUrl":"bcow_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223059966682","github":"","web":"https://bcow.world/","googlePlay":"","appStore":""}},{"title":"흑우집합소(앱) - 로또번호 추천 서비스","description":"로또번호 추천 서비스","techStack":["Dart","Flutter","drift","provider"],"thumbnailUrl":"bcow_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223232966579","github":"","web":"","googlePlay":"https://play.google.com/store/apps/details?id=dev.mhlab.bcow_world","appStore":"https://itunes.apple.com/kr/app/apple-store/6470312130"}}]}}},"pageContext":{"slug":"/java/171031_javabean/","nextSlug":"/java/171214_java-annotation/","prevSlug":"/java/171031_javastrings/"}},"staticQueryHashes":["1186322783","1321405810","3649515864"]}