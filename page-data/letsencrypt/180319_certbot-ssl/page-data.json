{"componentChunkName":"component---src-templates-blog-post-js","path":"/letsencrypt/180319_certbot-ssl/","result":{"data":{"site":{"siteMetadata":{"title":"MHLab blog","author":"MHLab","siteUrl":"https://elfinlas.github.io","comment":{"disqusShortName":"","utterances":"elfinlas/blog_utterances"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"1f90c4f3-2208-5e0e-814a-d9abf50c5fa3","excerpt":"22.09.25 내용 추가 최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다. Webroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다. DNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자. LetsEncrypt 적용법 (DNS 인증 & AWS) 주의 이 문건은 과거 Hexo 블로그 (2018-03-1…","html":"<h1 id=\"220925-내용-추가\" style=\"position:relative;\"><a href=\"#220925-%EB%82%B4%EC%9A%A9-%EC%B6%94%EA%B0%80\" aria-label=\"220925 내용 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>22.09.25 내용 추가</h1>\n<p>최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다.<br>\nWebroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다.<br>\nDNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자.</p>\n<p><a href=\"https://elfinlas.github.io/letsencrypt/220923_use-letsencrypt\">LetsEncrypt 적용법 (DNS 인증 &#x26; AWS)</a></p>\n<br>\n<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2018-03-19-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2018-03-19-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2018 03 19 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2018-03-19) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<br>\n<h1 id=\"무료-인증서를-받기-위해서\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EB%A3%8C-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%A5%BC-%EB%B0%9B%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C\" aria-label=\"무료 인증서를 받기 위해서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무료 인증서를 받기 위해서…</h1>\n<p>사내정보시스템을 1차 오픈을 위해서 aws 준비, 도메인 설정 등등 이것저것 할일이 많았습니다.</p>\n<p>그 중 HTTPS 적용을 위해서 인증서를 알아보고 있었습니다.</p>\n<p>개발중에는 인증서를 직접 만들어 사용하였지만, 정식오픈을 할 경우 공식적인 인증을 받은 인증서를 사용해야 했습니다.</p>\n<p>그래서 이것저것 찾아보던 중 Certbot을 알게 되었습니다.</p>\n<p>오늘의 포스팅 목표는 다음과 같습니다.</p>\n<blockquote>\n<p>Aws EC2의 우분투(16.04) 환경에서 Spring Boot를 jar로 구동하고, Let’s Encrypt에서 발급받은 인증서로 Https를 적용하기</p>\n</blockquote>\n<p>처음 해보는 것이라서 시행착오와 조사할 내용이 많았는데 이것을 정리하며 포스팅을 진행하도록 하겠습니다.</p>\n<br>\n<h2 id=\"lets-encrypt-certbot\" style=\"position:relative;\"><a href=\"#lets-encrypt-certbot\" aria-label=\"lets encrypt certbot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Let’s Encrypt? Certbot?</h2>\n<p>처음에 햇갈린 것이 저 두개가 무엇인지에 대한 것이었습니다.</p>\n<p><strong>Let’s Encrypt</strong>의 경우 Https의 확산을 늘리기 위한 취지로 시작된 비영리 프로젝트입니다.<br>\n<a href=\"https://letsencrypt.org\">Let’s Encrypt 공식 홈페이지</a>에서 좀 더 자세한 정보를 확인할 수 있습니다.</p>\n<p><strong>Certbot</strong>은 Let’s Encrypt 인증서를 자동으로 발급 및 갱신을 해주는 봇 프로그램입니다.<br>\n<a href=\"https://certbot.eff.org\">certbot 공식 홈페이지</a>에서 운영할 소프트웨어(Apache, Nginx, etc)와 OS에 따른 설치 방법을 제공합니다.</p>\n<p>필요하신 분은 공식 홈페이지에서 알맞는 설치 방법을 확인하시기 바랍니다.</p>\n<p>시작 전에…\nLet’s Encrypt 인증서 발급 프로세스는 아래와 같습니다.</p>\n<ol>\n<li>인증서 요청</li>\n<li>도메인에 대한 소유권 확인</li>\n<li>발급</li>\n</ol>\n<p>위의 세 가지를 거치는데 이것을 자동으로 수행해주는 프로그램이라 생각하면 됩니다.<br>\n이번 포스팅에서는 <strong>Certbot</strong>을 이용해서 인증서를 발급받아 보도록 하겠습니다.</p>\n<ul>\n<li><strong>Certbot</strong>을 이용해 인증서를 받기 전 준비물은 <strong>서비스할 도메인 주소</strong>, <strong>서비스를 운용하는 서버</strong> 가 필수적으로 필요합니다.</li>\n</ul>\n<br>\n<h2 id=\"certbot-설치\" style=\"position:relative;\"><a href=\"#certbot-%EC%84%A4%EC%B9%98\" aria-label=\"certbot 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Certbot 설치</h2>\n<p>먼저 우분투(16.04)에서 Certbot을 설치해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> sudo apt-get update #apt-get 업데이트\n> sudo apt-get install software-properties-common  #선행 소프트웨어 설치\n> sudo add-apt-repository ppa:certbot/certbot #저장소 추가\n> sudo apt-get update  #apt-get 업데이트</code></pre></div>\n<p>여기까지 하면 apt-get에서 certbot을 설치할 수 있는데 <strong>(아직 certbot 설치 전)</strong> 설치를 하기 전에 고려할 것이 있습니다.</p>\n<p><strong>Certbot</strong>을 통해서 인증서를 발급받을 위 프로세스에서 2번 항목인 소유권 확인이 있습니다.<br>\n왜 도메인 소유권을 확인하는지 궁금하실 수 있습니다.</p>\n<p>이는 클라이언트에서는 상대방 서버가 진짜 통신하려는 사용자 서버인지를 검증하기 위함입니다.</p>\n<p>예를 들어 소유하지 않은 도메인에 대한 인증서를 신뢰성이 있는 발급기관으로부터 발급받았다 한다면 해당 도메인을 이용하여 가짜 서버로 연결되게 할 수 있습니다.</p>\n<p>만약 도메인 검증을 안한다면, 악의를 가진 사람이 국내에서 유명한 naver.com이나 daum.net 등의 도메인으로 인증서를 발급받게 되고, 해당 도메인에 약간의 조작을 통해서 자신이 만든 해킹을 목적으로 하는 서버에 연결하게끔 할 수 있게 됩니다.</p>\n<p>좀 더 자세한 사항은 <strong>StartSSL 사건</strong>을 검색해보시면 이해가 더욱 쉽습니다.</p>\n<p>다시…<br>\n이 소유권 확인을 위해 Certbot에서는 두 가지 인증 방법을 제공합니다.</p>\n<br>\n<ol>\n<li>\n<p><strong>Standalone 방식</strong></p>\n<p>이 방법은 Certbot이 간이 웹 서버를 돌려 도메인 인증 요청을 처리하는 방식입니다.\n하지만 인증용 간이 서버가 80, 443번 포트를 사용하기 때문에 운영 중인 서버가 해당 포트를 쓰게 된다면, 발급 또는 갱신 시 마다 <strong>잠시 서버를 내려야 하는 문제</strong>가 있습니다.\n물론 해당 포트를 사용하지 않는다면 이 방법을 사용하셔도 무방합니다.</p>\n</li>\n<li>\n<p><strong>Webroot 방식</strong></p>\n<p>이 방법은 도메인 인증을 위해 외부에서 접근 가능한 경로를 제공하고, Let’s Encrypt 측에서 해당 경로로 접속해 인증을 하는 방식입니다.\n이 방식을 사용할 경우 1번 방식의 <strong>서비스 종료</strong>는 하지 않아도 됩니다.</p>\n</li>\n</ol>\n<br>\n<p>이번 포스팅에서는 <strong>2번 Webroot</strong> 방식을 사용하여 진행을 할 것입니다.</p>\n<p>저의 경우 Java -jar로 수행을 하고, 향후 앞단에 서버를 하나 둘 예정이어서 <strong>Apache</strong>를 하나 설치하여 진행하였습니다.</p>\n<p>이제 설치부분으로 넘어와서…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> sudo apt-get install certbot</code></pre></div>\n<br>\n<h2 id=\"certbot으로-인증서-발급받기\" style=\"position:relative;\"><a href=\"#certbot%EC%9C%BC%EB%A1%9C-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%B0%9C%EA%B8%89%EB%B0%9B%EA%B8%B0\" aria-label=\"certbot으로 인증서 발급받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Certbot으로 인증서 발급받기</h2>\n<p>설치를 완료한 뒤에는 위에서 언급한 도메인 인증 방법을 선택하여 발급받아야 합니다.</p>\n<p>1번 방식을 사용할 경우…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> sudo certbot certonly --standalone -d [도메인명]</code></pre></div>\n<p>2번 방법을 사용할 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> sudo certbot certonly --webroot -w [접근 가능 경로] -d [도메인명]</code></pre></div>\n<p>몇 가지 옵션을 설명하자면…</p>\n<ul>\n<li>-w : webroot 인증 방식 시 인증 파일을 생성할 기준 폴더를 명시합니다.\n예시로 Apache의 경우 /var/www/html 와 같은 경로를 의미합니다.</li>\n<li>-d : 인증서를 적용할 도메인 명을 적어줍니다.\n만약 2개 이상을 작성할 경우 -d [도메인 명] -d [도메인 명] 으로 복수 작성 가능합니다.</li>\n<li>certonly : 인증서 생성 및 갱신만 진행하는 옵션</li>\n<li>—work-dir : 작업 디렉토리 지정 옵션 (기본값: /var/lib/letsencrypt)</li>\n<li>—logs-dir : 로그 디렉토리 지정 옵션 (기본값: /var/log/letsencrypt)</li>\n<li>—config-dir : 설정파일 및 인증서가 저장되는 디렉토리 지정하는 옵션 (기본값: /etc/letsencrypt)</li>\n</ul>\n<br>\n<p>아래는 실제 사용된 명령어 및 결과입니다.<br>\n주요 정보 및 민감정보는 임의 수정을 하였고, 실행하는 OS 및 구성에 따라 아래와는 다르게 결과가 출력될 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ubuntu@ip-000-00-00-000:/var/www/html$ sudo certbot certonly --webroot -w /var/www/html -d [mydomain]\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator webroot, Installer None\nEnter email address (used for urgent renewal and security notices) (Enter 'c' to\ncancel): [등록 시 사용할 이메일 주소 입력]\nStarting new HTTPS connection (1): acme-v01.api.letsencrypt.org\n\n-------------------------------------------------------------------------------\nPlease read the Terms of Service at\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\nagree in order to register with the ACME server at\nhttps://acme-v01.api.letsencrypt.org/directory\n-------------------------------------------------------------------------------\n(A)gree/(C)ancel: A\n\n-------------------------------------------------------------------------------\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\norganization that develops Certbot? We'd like to send you email about EFF and\nour work to encrypt the web, protect its users and defend digital rights.\n-------------------------------------------------------------------------------\n(Y)es/(N)o: Y\n\nStarting new HTTPS connection (1): supporters.eff.org\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for member.tachyontech.co.kr\nUsing the webroot path /var/www/html for all unmatched domains.\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/member.tachyontech.co.kr/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/member.tachyontech.co.kr/privkey.pem\n   Your cert will expire on 2018-06-16. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot\n   again. To non-interactively renew *all* of your certificates, run\n   \"certbot renew\"\n - Your account credentials have been saved in your Certbot\n   configuration directory at /etc/letsencrypt. You should make a\n   secure backup of this folder now. This configuration directory will\n   also contain certificates and private keys obtained by Certbot so\n   making regular backups of this folder is ideal.\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n\nubuntu@ip-000-00-00-000:/var/www/html$</code></pre></div>\n<p>위에서 결과 중 <strong>IMPORTANT NOTES:</strong> 아래에 <strong>Congratulations!</strong> 라는 멘트가 있으면 인증서 발급에 성공한 것입니다.<br>\n발급받은 인증서를 확인하려면 아래의 명령어를 통해 확인 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ubuntu@ip-000-00-00-000:/var/www/html$ sudo certbot certificates\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\n\n-------------------------------------------------------------------------------\nFound the following certs:\n  Certificate Name: [name]\n    Domains: [name]\n    Expiry Date: 2018-06-16 11:50:35+00:00 (VALID: 89 days)\n    Certificate Path: /etc/letsencrypt/live/[name]/fullchain.pem\n    Private Key Path: /etc/letsencrypt/live/[name]/privkey.pem\n-------------------------------------------------------------------------------\nubuntu@ip-000-00-00-000:/var/www/html$</code></pre></div>\n<p>이로써 인증서 발급에 대한 설명은 끝났습니다.\n간략하게 정리를 하면 아래와 같습니다.</p>\n<ol>\n<li>도메인 및 서버 준비</li>\n<li>certbot 설치</li>\n<li>certbot으로 인증서 발급</li>\n</ol>\n<p>다음 포스팅에서는 생성된 pem 인증서를 Spring boot에 붙여서 사용하는 방법을 알아보겠습니다.</p>\n<p><a href=\"https://elfinlas.github.io/spring_spring-boot/180319_spring-boot-tls-certbot/\">Certbot으로 만든 인증서를 Spring Boot에서 사용하기</a></p>","frontmatter":{"title":"Certbot으로 무료 인증서 발급","date":"March 19, 2018"}}},"pageContext":{"slug":"/letsencrypt/180319_certbot-ssl/","previous":{"fields":{"slug":"/java/180228_java8localdate2json/"},"frontmatter":{"title":"Java8의 LocalDateTime을 Json으로 전송 시 ISO-8601 형식으로 출력하기"}},"next":{"fields":{"slug":"/spring_spring-boot/180319_spring-boot-tls-certbot/"},"frontmatter":{"title":"Certbot으로 만든 인증서를 Spring Boot에서 사용하기"}}}},"staticQueryHashes":["3128451518","903436796"]}