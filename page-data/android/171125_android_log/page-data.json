{"componentChunkName":"component---src-templates-blog-post-js","path":"/android/171125_android_log/","result":{"data":{"site":{"siteMetadata":{"title":"MHLab blog","author":"MHLab","siteUrl":"https://elfinlas.github.io","comment":{"disqusShortName":"","utterances":"elfinlas/blog_utterances"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b1188f19-bf2b-5a97-aa1f-ecde509d8800","excerpt":"주의 이 문건은 과거 Hexo 블로그 (2017-11-25) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. 안드로이드 로그 안드로이드 개발자라면 개발에서 결과 또는 테스트를 위해 로그 기능을 사용할 것입니다. 하지만 이 로그는 배포버전이 아닌 개발버전에서만 나오게끔 하는 것이 제일 베스트한 선택일 것입니다. 또한 기본적으로 사용하는 로그의 경우 아래와 같이 사용하게 됩니다. Log…","html":"<h1 id=\"주의\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98\" aria-label=\"주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의</h1>\n<h3 id=\"이-문건은-과거-hexo-블로그-2017-11-25-에서-이동된-문서입니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%AC%B8%EA%B1%B4%EC%9D%80-%EA%B3%BC%EA%B1%B0-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-2017-11-25-%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99%EB%90%9C-%EB%AC%B8%EC%84%9C%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"이 문건은 과거 hexo 블로그 2017 11 25 에서 이동된 문서입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 문건은 과거 Hexo 블로그 (2017-11-25) 에서 이동된 문서입니다.</h3>\n<h4 id=\"시간이-지남에-따라-최신-기술과-다를-수-있으니-주의-바랍니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%A7%80%EB%82%A8%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%B5%9C%EC%8B%A0-%EA%B8%B0%EC%88%A0%EA%B3%BC-%EB%8B%A4%EB%A5%BC-%EC%88%98-%EC%9E%88%EC%9C%BC%EB%8B%88-%EC%A3%BC%EC%9D%98-%EB%B0%94%EB%9E%8D%EB%8B%88%EB%8B%A4\" aria-label=\"시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다.</h4>\n<hr>\n<h1 id=\"안드로이드-로그\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EB%A1%9C%EA%B7%B8\" aria-label=\"안드로이드 로그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>안드로이드 로그</h1>\n<p>안드로이드 개발자라면 개발에서 결과 또는 테스트를 위해 로그 기능을 사용할 것입니다.</p>\n<p>하지만 이 로그는 배포버전이 아닌 개발버전에서만 나오게끔 하는 것이 제일 베스트한 선택일 것입니다.</p>\n<p>또한 기본적으로 사용하는 로그의 경우 아래와 같이 사용하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Log tag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Log message...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Log 클래스 뒤에 메서드는 로그 레벨로써 아래와 같이 분류됩니다.</p>\n<br>\n<table>\n<thead>\n<tr>\n<th align=\"center\">로그 레벨</th>\n<th align=\"center\">설명</th>\n<th align=\"center\">우선순위</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">e(Error)</td>\n<td align=\"center\">오류가 났을 때 사용</td>\n<td align=\"center\">매우 높음</td>\n</tr>\n<tr>\n<td align=\"center\">w(Warn)</td>\n<td align=\"center\">오류는 아니지만 문제가 발생할 가능성이 있을 때 사용</td>\n<td align=\"center\">높음</td>\n</tr>\n<tr>\n<td align=\"center\">i(Info)</td>\n<td align=\"center\">일반적으로 사용</td>\n<td align=\"center\">중간</td>\n</tr>\n<tr>\n<td align=\"center\">d(Debug)</td>\n<td align=\"center\">개발 중 확인이 필요할 경우 사용</td>\n<td align=\"center\">낮음</td>\n</tr>\n<tr>\n<td align=\"center\">v(Verbose)</td>\n<td align=\"center\">자세한 정보 등을 표시할 때 사용</td>\n<td align=\"center\">매우 낮음</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>로그에 대해 좀 더 상세한 설명은 <a href=\"https://developer.android.com/studio/debug/am-logcat.html\">공식문서</a>를 참고하시길</p>\n</blockquote>\n<br>\n<p>이제 기본적인 내용은 여기까지하고, 포스트에서 원하는 목표는 다음과 같습니다.</p>\n<p><strong>1. 개발버전에서만 동작하는 기능 만들기</strong><br>\n<strong>2. 나만의 로그 만들기</strong></p>\n<p>그럼 하나씩 풀어나가보도록 하겠습니다.</p>\n<br>\n<h2 id=\"1-개발버전에서만-동작하는-기능-만들기\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9C%EB%B0%9C%EB%B2%84%EC%A0%84%EC%97%90%EC%84%9C%EB%A7%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1 개발버전에서만 동작하는 기능 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 개발버전에서만 동작하는 기능 만들기</h2>\n<p>먼저 현재 어플리케이션이 구동되는 상태가 개발버전인지 아니면 배포버전인지 알아야 합니다.</p>\n<p>저의 경우 아래와 같이 전역 메서드를 하나 생성하고, 호출하는 방식으로 구현하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeCls</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">/**\n     * 현재 디버그 상태(개발모드) 체크를 하는 메서드\n     * @param context\n     * @return true-개발모드 / false-릴리즈 모드\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isDebuggable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">boolean</span> debuggable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PackageManager</span> pm <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ApplicationInfo</span> appinfo <span class=\"token operator\">=</span> pm<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationInfo</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            debuggable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>appinfo<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">&amp;</span> <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_DEBUGGABLE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PackageManager<span class=\"token punctuation\">.</span>NameNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyLog\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeClazzAndMethodName</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"isDebuggable\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" error msg = \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> debuggable<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 메서드를 호출할 경우 boolean을 반환하는데 true일 경우 개발모드(Debug), false일 경우 배포모드입니다.</p>\n<p>일단 개발버전을 체크하는 메서드는 준비되었습니다.</p>\n<p>그럼 다음과 같이 로그를 개발버전에서만 보이게끔 처리할 수 있을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SomeCls</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDebuggable</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DEV-LOG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello~ World Log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런데 매번 이렇게 로그를 작성하려면 뭔가 번거롭습니다.</p>\n<p>특히 저 <strong>if(SomeCls.isDebuggable(context))</strong> 이 부분이 몹시 거슬립니다.</p>\n<p>또한 Context 객체를 계속 전달을 받아야 하는 부분도 번거롭네요.</p>\n<p>이것을 해결하기 위해선 다양한 방법이 있습니다.</p>\n<ol>\n<li>어플리케이션에서 제일 먼저 진입하는 Activity에서 전역(정적) 변수를 선언하고, 이 전역(정적) 변수를 통해서 체크하는 방법.</li>\n<li>전역에서 사용할 클래스를 하나 생성 후, 전역 변수를 하나 만들고,\n어플리케이션에서 제일 먼저 진입하는 Activity에서 앞서 설명한 전역 변수에 값을 저장 후 체크하는 방법.</li>\n</ol>\n<p>말로 쓰면 어려우니 간단한 코드로 설명을 대신합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">///제일 처음 진입하는 Activity == MainActivity</span>\n<span class=\"token comment\">///전역 클래스 == CommUtil   전역 변수 == boolean ISDEBUG</span>\n\n<span class=\"token comment\">///Type 1 (MainActivity 안)</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token constant\">ISDEBUG</span> <span class=\"token operator\">=</span> <span class=\"token function\">isDebuggable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">///Type 2 (MainActivity 안)</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">CommUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ISDEBUG</span> <span class=\"token operator\">=</span> <span class=\"token function\">isDebuggable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 개발버전에서만 동작하는 기능을 구현하였습니다.</p>\n<p>하지만 로그를 작성할 때마다 if문을 계속 같이 쓰면 번거롭습니다.</p>\n<p>또한 항상 로그 태그와 함께 메세지를 넣는 부분도 거슬립니다. (물론 경우에 따라서 로그 태그를 통해 분기하기도 하지만…)</p>\n<p>그렇다면 나만의 로그 클래스를 만들고 그 안에서 위 작업을 한꺼번에 처리한다면?</p>\n<br>\n<h2 id=\"2-나만의-로그-만들기\" style=\"position:relative;\"><a href=\"#2-%EB%82%98%EB%A7%8C%EC%9D%98-%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 나만의 로그 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 나만의 로그 만들기</h2>\n<p>이제 나만의 로그 클래스를 만들어 보도록 하겠습니다.</p>\n<p>프로젝트에서 적당한 로그 클래스를 만들어봅니다.</p>\n<p>먼저 코드를 참고하기길..</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyLog</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">TAG</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"MyAppLog\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ISDEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TAG</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">v</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ISDEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">v</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TAG</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ISDEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TAG</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ISDEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TAG</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ISDEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TAG</span><span class=\"token punctuation\">,</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">/**\n     * 로그에 띄울 메세지를 만들어주는 메서드\n     * @param logMsg\n     * @return\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">makeLogBody</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> logMsg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">StackTraceElement</span> ste <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ste<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"::\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ste<span class=\"token punctuation\">.</span><span class=\"token function\">getMethodName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"] \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>logMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>일단 사용방법은 <strong>MyLog.</strong> 으로 사용하면 됩니다.</p>\n<p>내부에서 사용된 <strong>ISDEBUG</strong>의 경우 위에서 설명한 방법을 참고합니다.</p>\n<p><strong>makeLogBody</strong> 메서드의 경우 로그의 보여줄 메세지를 만들어주는 메서드로써 보여주고 싶은 내용은 개발자의 입맛에 맞게끔 바꾸면 됩니다.</p>\n<br>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<p>자신의 입맛에 맞는 커스텀 로그를 만드는 방법을 간단히 알아보았습니다.</p>\n<p>오픈소스에서도 다양한 안드로이드용 로그 라이브러리가 있습니다.</p>\n<p>전에 찾아본 것으론 <strong><a href=\"https://github.com/orhanobut/logger\">Logger</a></strong> 라는 것도 있었습니다.</p>","frontmatter":{"title":"안드로이드 개발 시 커스텀 로그 남기기","date":"November 25, 2017"}}},"pageContext":{"slug":"/android/171125_android_log/","previous":{"fields":{"slug":"/android/171115_android_fontawsome_use/"},"frontmatter":{"title":"Android에서 Font Awesome 사용하기"}},"next":{"fields":{"slug":"/til/171125_devnote01/"},"frontmatter":{"title":"11월 25일 개발일지 (근황 및 정리)"}}}},"staticQueryHashes":["3128451518","903436796"]}