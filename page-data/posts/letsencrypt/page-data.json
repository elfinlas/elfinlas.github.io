{"componentChunkName":"component---src-templates-posts-template-index-tsx","path":"/posts/letsencrypt","result":{"pageContext":{"currentCategory":"letsencrypt","categories":["All","android","aws","basic_know","book","cloud","dart_flutter","gatsby","java","js_ts","letsencrypt","mac","mongodb","my_project","my_story","nest_js","next-js","nginx","node-js","react","redis","spring_spring-boot","thymeleaf","til","tools","ubuntu","utils","vcs_git"],"edges":[{"node":{"id":"5b26f4f3-83e9-5af9-a503-86bc38082395","excerpt":"23.01.18 아마존에서 작업이 미흡해서 일부 내용을 추가합니다.  이번에 서비스를 개발하고 오픈하면서… 예전에 LetsEncrypt를 적용해봤던 적은 있었다. 하지만 방법이 너무 오래되었고, 와일드카드 방식으로 도메인을 사용해서 인증 방법을 다시 찾아보았다. 그 전에 앞서 먼저 내가 사용했었던 두 가지 방식을 간단하게 정리하고 넘어가겠다. Standalone 과 Webroot 방식 먼저 Standalone 방식의 경우 비 효율적인 방식이다. 적용 대상의 80포트에 서버를 띄워서 인증하고 인증서를 발급받는 방식인데, 실제 서비스 시 인증을 하게 될 경우 매우 곤란한 상황이 연출될 것이다. 그리고 와일드카드 서브 도메인의 인증이 불가능하다. Webroot 방식의 경우 위 방법보다는 덜 무식하다. 서버의 특정 디렉토리에 접근 가능 여부를 테스트 해서 인증서를 발급해주는 방식이다. 하지만 서브도메인이 존재하는 경우 각각 인증서를 발급받아야 한다. 예를 들어서 설명하면 www.test.…","fields":{"slug":"/letsencrypt/220923_use-letsencrypt/"},"frontmatter":{"categories":"letsencrypt","title":"Lets Encrypt 적용하기 (AWS EC2 기준)","date":"2022.09.23"}},"next":{"fields":{"slug":"/my_story/220919_new-blog-start/"}},"previous":{"fields":{"slug":"/js_ts/221027_array_combine/"}},"categoriesMap":{"letsencrypt":true}},{"node":{"id":"e8a0547b-d342-55b2-8418-d2dedec58e82","excerpt":"22.09.25 내용 추가 여기서 진행한 방식의 경우 standalone 방식이다. 이 방식은 80포트를 강제로 내려서 인증 대상이 진짜 사용하는 서비스인지를 체크하기에 매우 비효율적인 방식이다. 최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다. Webroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다. DNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자. LetsEncrypt 적용법 (DNS 인증 & AWS) Let’sEncrypt 갱신이 불가능?? Let’sEncrypt를 적용하고 나서 갱신 테스트를 해보는데 이상한 에러를 마주했다. 아 뭐가 이렇게 안되지? 라고 삽질했었으나… 이것저것 찾아본 결과 아래의 문제가 원인이었다 원인은 갱신을 auto 모드가 아닌 manual 모드로 진행한 문제 원인을 제공했던 명령어는 다음과 같다 메뉴얼 모드로 만든 …","fields":{"slug":"/letsencrypt/211105_letscert-fail/"},"frontmatter":{"categories":"letsencrypt","title":"Let'sEncrypt 갱신이 불가할 때 (produced an unexpected error The manual plugin is not working)","date":"2021.11.05"}},"next":{"fields":{"slug":"/letsencrypt/211105_renew-certbot/"}},"previous":{"fields":{"slug":"/node-js/211109-vscode-nodemodule/"}},"categoriesMap":{"letsencrypt":true}},{"node":{"id":"bb244d93-b04a-54c3-af51-134296f4af72","excerpt":"22.09.25 내용 추가 여기서 진행한 방식의 경우 standalone 방식이다. 이 방식은 80포트를 강제로 내려서 인증 대상이 진짜 사용하는 서비스인지를 체크하기에 매우 비효율적인 방식이다. 최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다. Webroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다. DNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자. LetsEncrypt 적용법 (DNS 인증 & AWS) Let’sEncrypt 유효기간? 혹시 아직 Let’sEncrypt를 설치하지 않으신 분이라면 Let’sEncrypt 설치후 AWS에 적용하기 에 설치법을 참고하시길 바란다 Let’sEncrypt는 무료인 대신에 인증서를 주기적으로 인증해줘야 한다 그래서 보통 이것을 크론탭으로 처리해서 편하게 간다. 경각심(?)을 위해 직접 갱신하는 분(?)도…","fields":{"slug":"/letsencrypt/211105_renew-certbot/"},"frontmatter":{"categories":"letsencrypt","title":"Let'sEncrypt 자동 갱신 처리하기","date":"2021.11.05"}},"next":{"fields":{"slug":"/letsencrypt/211105_letsencrypt-install/"}},"previous":{"fields":{"slug":"/letsencrypt/211105_letscert-fail/"}},"categoriesMap":{"letsencrypt":true}},{"node":{"id":"b6acc7d1-b7ac-54d3-b1e1-8e11b0eb224f","excerpt":"22.09.25 내용 추가 여기서 진행한 방식의 경우 standalone 방식이다. 이 방식은 80포트를 강제로 내려서 인증 대상이 진짜 사용하는 서비스인지를 체크하기에 매우 비효율적인 방식이다. 최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다. Webroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다. DNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자. LetsEncrypt 적용법 (DNS 인증 & AWS) Let’sEncrypt? 이번에 서비스를 준비하면서 EC2에서 하나씩 올려서 해보기로 했다. 사실 AWS 기반이라 로드벨런서에 인증서 물리면 되는데… 전에 해보던게 생각 나기도 했고.. 일단 서비스 규모가 더 커지면 그 때 안정적으로 가고 지금은 빌드업 수준으로 해보기로 했다. 일단 뭐 Let’sEncrypt에 대한 자세한 것은 이미 알고 있다…","fields":{"slug":"/letsencrypt/211105_letsencrypt-install/"},"frontmatter":{"categories":"letsencrypt","title":"Let'sEncrypt 설치후 AWS에 적용하기","date":"2021.11.04"}},"next":{"fields":{"slug":"/node-js/211018_yarn_usage_error/"}},"previous":{"fields":{"slug":"/letsencrypt/211105_renew-certbot/"}},"categoriesMap":{"letsencrypt":true}},{"node":{"id":"da18d3dc-3e3a-5608-994f-2828f0df41db","excerpt":"22.09.25 내용 추가 최근 방식의 경우 Webroot나 DNS 인증을 사용하는데, 이번에 DNS 인증에 대하여 포스팅을 진행했다. Webroot도 사용하지만 와일드카드(ex: *.api.com 등) 인증이 불가하기 때문에 DNS 인증을 사용할 것을 추천한다. DNS 인증 방식이 필요한 경우 아래 포스팅을 참고하자. LetsEncrypt 적용법 (DNS 인증 & AWS) 주의 이 문건은 과거 Hexo 블로그 (2018-03-19) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. 무료 인증서를 받기 위해서… 사내정보시스템을 1차 오픈을 위해서 aws 준비, 도메인 설정 등등 이것저것 할일이 많았습니다. 그 중 HTTPS 적용을 위해서 인증서를 알아보고 있었습니다. 개발중에는 인증서를 직접 만들어 사용하였지만, 정식오픈을 할 경우 공식적인 인증을 받은 인증서를 사용해야 했습니다. 그래서 이것저것 찾아보던 중 Certbot을 알게 되었습니다.…","fields":{"slug":"/letsencrypt/180319_certbot-ssl/"},"frontmatter":{"categories":"letsencrypt","title":"Certbot으로 무료 인증서 발급","date":"2018.03.19"}},"next":{"fields":{"slug":"/java/180228_java8LocalDate2Json/"}},"previous":{"fields":{"slug":"/spring_spring-boot/180319_spring-boot-tls-certbot/"}},"categoriesMap":{"letsencrypt":true}}]}},"staticQueryHashes":["1321405810","3649515864"]}