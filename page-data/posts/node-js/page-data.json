{"componentChunkName":"component---src-templates-posts-template-index-tsx","path":"/posts/node-js","result":{"pageContext":{"currentCategory":"node-js","categories":["All","android","aws","basic_know","book","cloud","dart_flutter","gatsby","java","js_ts","letsencrypt","mac","mongodb","my_project","my_story","nest_js","next-js","nginx","node-js","react","redis","spring_spring-boot","thymeleaf","til","tools","ubuntu","utils","vcs_git"],"edges":[{"node":{"id":"b13b6ea5-03c0-5a03-804e-afd230ce6578","excerpt":"배포를 하려다가… 흑집소 서비스를 더 개발해서 오픈하려 했지만… 일단 홍보 전 몇가지 기능만 오픈해서 데이터를 모아보자는 생각에 배포를 준비하게 되었다. 로컬 환경을 떠나서 EC2의 서비스 환경을 구성하던 도중, 전에 개발했던 MyMeLink의 기록을 찾아서 적용하기 시작했다. package.json의 script 부분도 알맞게 변경 후 아래와 같이 구성되어 있었다. 위의 내용 중 실행 쪽은 가려둔 상태이다. 근데 실행을 하니… 아래와 같은 에러가 발생하였다. 뭐가 문제일까? 위 에러를 보면 알겠지만 run-s라는 것을 못찾아서 그렇다. 근데 따로 뭔가 설치하진 않았던것 같은데… 그래서 웹에서 찾아보니… 내가 설치를 안한게 있었다… 이상한데…package.json 비교해봤지만 저거는 따로 안깔았었다. 무튼 아래 패키지를 설치하니 잘 되었다. 여담인데 스택오버플에서 아래와 같이…  왜 비추 5개가 박혀있는 것인가… 정황은 잘 모르겠지만, 그 정도로 우매했던 질문인 것인가 라는 생각이…","fields":{"slug":"/node-js/230118_yarn_runs_not_excute/"},"frontmatter":{"categories":"node-js","title":"yarn에서 run-s 실행이 안될 때 (With package.json)","date":"2023.01.18"}},"next":{"fields":{"slug":"/react/230115_useref/"}},"previous":{"fields":{"slug":"/mongodb/230118_mongo_dump/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"f4b08c78-4551-51a5-b928-d56301fde200","excerpt":"NVM (Node Version Manager) 이번에 Hexo 에서 Gatsby 블로그로 옮겨오면서 이것저것 셋팅하느라 바빴다. 그 중 이 블로그는 Gatsby-Starter-bee 라는 테마로 구성되어 있다. 근데 이 블로그 탬플릿은 노드 상위 버전을 지원하지 않는다. 허나… 지금 하는 프로젝트는 18버전대 이상을 사용한다.\n그래서 Node 버전을 관리하며 사용해야 했다. 파이썬에는 PyEnv인가 하는 것이 있는데 역시 노드 진영에도 비슷한 것을 하는게 있었다. 오늘 포스팅할 NVM이라는 것인데 대충 설명하면… 프로젝트마다 버전 관리하기. 라고 할 수 있다. 먼저 nvm을 설치한다. 윈도우나 기타 리눅스는 다른 블로그를 참고해주시고… 이곳에서는 MacOS 기준으로 설명한다. 뭐 설명이고 자시고 할 것 없이 brew 하나 있으면 끝이다. 설치 후 NVM 설정을 해줘야 하는데 터미널 쉘을 수정해야 한다. 나의 경우 zsh를 사용하는데 home 디렉토리의 .zshrc라는 파일을 열어…","fields":{"slug":"/node-js/221027_install-nvm/"},"frontmatter":{"categories":"node-js","title":"NVM으로 NodeJs 버전 변경 관리하기","date":"2022.10.27"}},"next":{"fields":{"slug":"/js_ts/221027_array_combine/"}},"previous":{"fields":{"slug":"/gatsby/221027_starter-search-add/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"29bbc1ee-f990-5e84-ad9e-cc559a30b803","excerpt":"세션을 사용하려다가… Node.JS에서 세션을 사용하려 했고, 저장소로 레디스(Redis) 를 사용하기로 했다. 설정법은 다음 포스팅에서 다루기로 하고… 일단 내가 쓰려 했던 패키지는 아래와 같다. 이렇게 설정하고 redis 설정을 해줬다. 참고로 설정 파일을 외부로 빼고 app.use() 에서 넣어서 쓰는 방식으로 개발했다. 이 부분을 참고하면 될 것 같다. 그리고 설정파일의 경우 전체 정보를 공개하기 어렵기에 공통적인 부분만 남긴다. 위와 같이 설정된 상태에서 node.js를 실행할 경우 아래와 같은 에러가 발생했다. 이런 문제가 발생하는 원인은 버전 문제다. 바로 connect-redis 패키지 문제이다. NPM 사이트 에서도 확인 가능하지만 일부 내용을 발췌하면 다음과 같다. 요기서 보면 redis를 사용할 때 v4를 사용할 경우 legacyMode를 사용해서 쓰라 되어 있다. 난 redis 버전을 낮췄다. “redis”: “v3” 무튼 해결법은… redis 버전을 낮춘다.…","fields":{"slug":"/node-js/220208_node-session-cache/"},"frontmatter":{"categories":"node-js","title":"Node.Js에서 Redis 세션 사용시 UnhandledPromiseRejectionWarning The client is closed 문제 뜨는 경우","date":"2022.02.08"}},"next":{"fields":{"slug":"/node-js/220228_node-absolute-path/"}},"previous":{"fields":{"slug":"/tools/220209_vscode-emmet/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"f579eb5c-d3a6-5325-b03f-4249055341bf","excerpt":"최근에 Node.JS 쪽으로 개발을 진행해보고 있다. Spring boot만 쓰다가 새롭게 해보니까 신기한게 많았다. 그리고 jQuery만 쓰고 수준 낮은 형태의 JS 개발을 했었던 내 개발 방법이 싫어서 이번에 JS도 다시 제대로 배워보고 있다. 근데 Node에서 아주 답답한게 있었다… 난 ES6 형식으로 개발하는데 모듈을 임포트할 때 아래와 같은 문제가 있었다. 저 경로 보이는가? 처음에 몇개 간단하게 쓸 때는 안거슬렸는데 점점 코드가 늘어나면서 상당히 귀찮게 되었다. 게다가 해당 파일의 위치가 변경될 경우 이 부분도 문제가 되었다. 그래서 구글에 이것저것 찾아보는데 이쪽으론 어떤 식으로 키워드를 넣어야 할지 몰라서 좀 삽질했다. 사실 간단한 패키지 하나 설치하면 끝났을 문제기도 한데…난 뭔가 더 설치하기가 좀 불편했다. 덕지덕지 쌓이기만 할 뿐더러 보안 문제가 생길수도 있을거 같아서 사람이 많이 받아서 쓰거나 가급적 안쓰는 방식으로 진행했다. 해결법 (Node 14.6.0 이…","fields":{"slug":"/node-js/220228_node-absolute-path/"},"frontmatter":{"categories":"node-js","title":"Node.Js 에서 import의 절대경로(Absolute Path) 지옥 탈출기","date":"2022.02.08"}},"next":{"fields":{"slug":"/tools/220202_vscode-kr-break/"}},"previous":{"fields":{"slug":"/node-js/220208_node-session-cache/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"ad99c146-2786-5790-b2e0-d44176c8a1de","excerpt":"Node.js에서 request를 사용하여… 현재 베타테스트 중인 내 프로젝트의 일부 기능을 Node.js로 변환하는 중이었다. 아직 Node를 학습하면서 붙이는 거라서 좀 익숙하지 않았다. 일단 진행하면서 겪은 문제의 포인트는 아래와 같다. 특정 사이트의 크롤링을 진행한 다음 해당 내역중에 필요한 데이터를 html 파싱 처리. 테스트 환경이 Node.js로 구축한 서버의 특정 url로 접근 시 1번 기능이 호출된다. 문제는 2번에 나온 url 호출을 하면 1번의 작업이 끝나고 그 결과를 json으로 뱉어야 하는데 {} 반환. 난 거의 Java로만 개발을 많이 했던 사람이라 (물론 python도 많이 썼지만 그건 좀 과거라 패스하고…) 순차적인 흐름에 익숙한 사람이다. 일단 코드로 보자. 내 개념으로는 crawling4Test() 함수의 처리 결과가 끝나고, 그 반환 값을 res.json() 에 전달하여 Json 응답이 처리되는 것으로 이해하고 있었다. 근데 아니었다. 먼저 cra…","fields":{"slug":"/node-js/211111_node-async/"},"frontmatter":{"categories":"node-js","title":"Node.js에서 request를 통해 가져온 값을 화면에 뿌릴 때 문제가 생기는 경우 (async, await... 동기/비동기에 대한 간단한 이해)","date":"2021.11.11"}},"next":{"fields":{"slug":"/tools/211109_local-install-hexo/211109_local-install-hexo/"}},"previous":{"fields":{"slug":"/aws/211118_aws-ec2-swap/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"a372f707-0ba2-5ea3-b141-37a2ea9f227d","excerpt":"Node에서 환경 변수를 사용하는 법? (설정 파일로 관리하기) 내가 Spring boot로 개발할 때는 application.yml에 설정을 넣고 개발을 했다. 그러다가 설정에 넣은 값에 변경이 필요할 경우 서버를 내렸다가 올려야 하는 문제가 생겼다. (물론 이중화 되어 있다 하더라도 이렇게 하는건 비효율적..) 그래서 Spring config server를 사용해서 처리하였다. Node.js는 이런 비슷한게 있나 찾아보다가… 아주 똑같지 않지만 설정 파일을 외부에 두고 사용할 수 있는 것을 찾았다. (Node를 첨 다뤄보니 이런게 있는줄 몰랐다) dotenv 먼저 설치를 진행한다. (yarn 을 사용하였는데 npm도 똑같다) yarn add dotenv 설정 내용을 선언 설정 파일을 만드는 형태는 두 가지가 있다. 여기서는 ES6 문법으로 설명한다. (CommonJS 는 간략하게만 표기..) 1. .env 파일 사용 프로젝트 내에 (보통은 자신 프로젝트 루트에) .env 파일을…","fields":{"slug":"/node-js/211109_node-dotenv/"},"frontmatter":{"categories":"node-js","title":"NodeJs에서 환경 변수 또는 설정파일을 이용하여 서버 속성 구성하기","date":"2021.11.09"}},"next":{"fields":{"slug":"/node-js/211109-vscode-nodemodule/"}},"previous":{"fields":{"slug":"/tools/211109_local-install-hexo/211109_local-install-hexo/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"cff3d302-6237-52ca-9664-3b3953f576f7","excerpt":"VSCode로 Node 개발을 진행하다가… 공부 겸 이번 프로젝트에 적용시키려고 Node를 공부하고 예제를 돌려보려던 중… 이상한 점을 발견했다. express를 분명 yarn add express 이렇게 로컬 프로젝트 영역에 설치했음에도 VSCode에서 해당 모듈을 참고하는 곳은 엉뚱한 곳을 가리키고 있었다. 경로가 Mac OS 기준으로.. /User/YourHome/Library/Caches/typescript/YourVersion/node_modules/@types/… 이상해서 저기를 열었다가 지워도 똑같이 생성되고 계속 참조했다. 그래서 이곳저곳 찾다가… 아주 간단하게 해결하였다. Solution VSCode의 환경설정을 들어가서 (Mac 기준 : Command + ,) 검색창에 아래의 키워드 검색 disableAutomaticTypeAcquisition 이거 항목이 체크가 안되어 있을건데 체크해준다. 라이브러리 참조 영역을 삭제하고 VSCode 재시작 해본다.  참고 스택…","fields":{"slug":"/node-js/211109-vscode-nodemodule/"},"frontmatter":{"categories":"node-js","title":"VSCode에서 노드 모듈이 이상한 곳을 가리킬 때.. (.../Library/Caches/typescript/.../node_modules/@types/.....)","date":"2021.11.09"}},"next":{"fields":{"slug":"/letsencrypt/211105_letscert-fail/"}},"previous":{"fields":{"slug":"/node-js/211109_node-dotenv/"}},"categoriesMap":{"node-js":true}},{"node":{"id":"736cb0a6-4734-5b62-a30c-8a434e8fbd1c","excerpt":"주의 이 문건은 과거 Hexo 블로그 (2021-10-18) 에서 이동된 문서입니다. 시간이 지남에 따라 최신 기술과 다를 수 있으니 주의 바랍니다. 처음 node를 하려다가… 이번에 진행하는 프로젝트에 노드를 적용해보려고 노드 공부를 시작했다. 노드 환경을 구축하고, npm은 문제가 많아서 페이스북에서 만든 yarn이라는걸 많이 쓰는 추세라 하여… yarn을 사용하기로 마음먹고 실행해봤다. 그런데 역시 처음엔 고통과 배움의 시간이 필요하듯… 이상한 문제가 나에게 찾아왔다.  프로젝트를 지웠다가 다시 해도 계속 발생하고, 검색을 해도 잘 안나오거나 뭐라고 하는지 이해가 잘 안되었다. 지금 생각해보면 너무나도 간단한 문제였지만 -_-;; 내가 찾은 솔루션은 이 문서 였다. 내용을 요약하면… 너가 지금 하려는 디렉토리의 상위쪽에 package.json 또는 yarn.lock 파일이 존재한다\n 맨 처음엔 ‘상위에 저런게 있을리가 없지’ 라면서 그냥 넘겼는데.. 도저히 못찾아서 헤매다가……","fields":{"slug":"/node-js/211018_yarn_usage_error/"},"frontmatter":{"categories":"node-js","title":"yarn 실행 시 \"Usage Error The nearest package directory\" 뜨는 문제","date":"2021.10.18"}},"next":{"fields":{"slug":"/tools/211004_iterm2_font/"}},"previous":{"fields":{"slug":"/letsencrypt/211105_letsencrypt-install/"}},"categoriesMap":{"node-js":true}}]}},"staticQueryHashes":["1321405810","3649515864"]}