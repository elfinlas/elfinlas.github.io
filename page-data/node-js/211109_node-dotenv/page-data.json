{"componentChunkName":"component---src-templates-post-template-index-tsx","path":"/node-js/211109_node-dotenv/","result":{"data":{"cur":{"id":"2e9868c5-382b-5d80-965a-61b863060edf","html":"<h2 id=\"node에서-환경-변수를-사용하는-법-설정-파일로-관리하기\" style=\"position:relative;\"><a href=\"#node%EC%97%90%EC%84%9C-%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"node에서 환경 변수를 사용하는 법 설정 파일로 관리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node에서 환경 변수를 사용하는 법? (설정 파일로 관리하기)</h2>\n<p>내가 Spring boot로 개발할 때는 application.yml에 설정을 넣고 개발을 했다.<br>\n그러다가 설정에 넣은 값에 변경이 필요할 경우 서버를 내렸다가 올려야 하는 문제가 생겼다.<br>\n(물론 이중화 되어 있다 하더라도 이렇게 하는건 비효율적..)</p>\n<p>그래서 Spring config server를 사용해서 처리하였다.<br>\nNode.js는 이런 비슷한게 있나 찾아보다가…<br>\n아주 똑같지 않지만 설정 파일을 외부에 두고 사용할 수 있는 것을 찾았다.<br>\n(Node를 첨 다뤄보니 이런게 있는줄 몰랐다)</p>\n<br>\n<h3 id=\"dotenv\" style=\"position:relative;\"><a href=\"#dotenv\" aria-label=\"dotenv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dotenv</h3>\n<p>먼저 설치를 진행한다.<br>\n(yarn 을 사용하였는데 npm도 똑같다)</p>\n<blockquote>\n<p>yarn add dotenv</p>\n</blockquote>\n<hr>\n<h3 id=\"설정-내용을-선언\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%EB%82%B4%EC%9A%A9%EC%9D%84-%EC%84%A0%EC%96%B8\" aria-label=\"설정 내용을 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 내용을 선언</h3>\n<p>설정 파일을 만드는 형태는 두 가지가 있다.</p>\n<blockquote>\n<p>여기서는 ES6 문법으로 설명한다. (CommonJS 는 간략하게만 표기..)</p>\n</blockquote>\n<h3 id=\"1-env-파일-사용\" style=\"position:relative;\"><a href=\"#1-env-%ED%8C%8C%EC%9D%BC-%EC%82%AC%EC%9A%A9\" aria-label=\"1 env 파일 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. .env 파일 사용</h3>\n<p>프로젝트 내에 (보통은 자신 프로젝트 루트에) .env 파일을 생성한다<br>\n그리고 아래와 같이 설정을 기재한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#SERVER CONFIG\n\nSERVER_PORT = 3001\nSERVER_NAME = HELLO_SERVER\nSERVER_DIS = 'HELLO_SERVER';</code></pre></div>\n<p>그리고 불러올 js에서는 아래와 같이 사용한다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//CommonJS</span>\n<span class=\"token comment\">//require(\"dotenv\").config();</span>\n\n<span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">import</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">\"dotenv\"</span><span class=\"token punctuation\">;</span>\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1 -> config 호출</span>\n\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_PORT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">checkTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_NAME = '</span>  <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_DES = '</span>  <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_DES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>주의할 점은 <strong>1번</strong> config() 호출 전에 process.env를 사용하면 에러가 난다. (ES6, CommonJS 둘다 동일)<br>\n그리고 .env 파일의 경로가 다른 곳에 있는 경우 아래와 같이 config 함수를 수정하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//CommonJS</span>\n<span class=\"token comment\">//require(\"dotenv\").config({path:'/your/env/path/.env.dev'});</span>\n\n<span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">import</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">;</span>\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/your/env/path/.env.dev'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>단 .env 파일이 존재하는 경우 위 내용은 적용이 안된다. (기존 .env 파일 따라감)</strong></p>\n<blockquote>\n<p>참고로 <strong>SERVER_DIS</strong> 출력해보면 SERVER_DES = ‘HELLO SERVER’; 와 같이 따옴표가 같이 출력된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_NAME = '</span>  <span class=\"token operator\">+</span> <span class=\"token keyword\">typeof</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_DES = '</span>  <span class=\"token operator\">+</span> <span class=\"token keyword\">typeof</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_DES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_NAME = '</span>  <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SERVER_DES = '</span>  <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_DES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">///Output</span>\n\n<span class=\"token constant\">SERVER_NAME</span> <span class=\"token operator\">=</span> string\n<span class=\"token constant\">SERVER_NAME</span> <span class=\"token operator\">=</span> string\n\n<span class=\"token constant\">SERVER_NAME</span> <span class=\"token operator\">=</span> <span class=\"token constant\">HELLO</span> <span class=\"token constant\">SERVER</span>\n<span class=\"token constant\">SERVER_DES</span> <span class=\"token operator\">=</span> <span class=\"token string\">'HELLO SERVER'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"2-configjs-등-js-파일로-사용\" style=\"position:relative;\"><a href=\"#2-configjs-%EB%93%B1-js-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"2 configjs 등 js 파일로 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. config.js 등 js 파일로 사용</h3>\n<p>이건 <strong>.env</strong> 랑 비슷하지만 사용법은 약간 다른데 먼저 원하는 곳에 config.js 파일을 생성해주고 그곳에 설정을 담는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> configData<span class=\"token punctuation\">;</span>\n\nconfigData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">SERVER_PORT</span><span class=\"token operator\">:</span> <span class=\"token number\">3001</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//ES6 방식</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span> configData <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Common JS 방식</span>\n<span class=\"token comment\">// module.exports = configData;</span></code></pre></div>\n<p>그리고 필요한 곳에서 다음과 같이 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">import</span> secondConfig  <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config.js\"</span>\n\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'process.env.PORT = '</span> <span class=\"token operator\">+</span> secondConfig<span class=\"token punctuation\">.</span>configData<span class=\"token punctuation\">.</span><span class=\"token constant\">SERVER_PORT</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약 Babel을 사용한 ES6 사용을 한다면 js 확장자는 무시해도 되지만, 미 사용시 .js 확장자를 붙여줘야 한다.</p>\n<p>그리고 저기 나온 예제에 있는 export 방식 말고도 여러 방식이 있다.<br>\n본문 하단의 링크를 참고하자.</p>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<p><a href=\"https://medium.com/@wonjong_oh/es6%EC%97%90%EC%84%9C-import-export-%EC%98%AC%EB%B0%94%EB%A5%B4%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B3%A0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-a60acd161051\">Import와 export</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#node%EC%97%90%EC%84%9C-%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B2%95-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\">Node에서 환경 변수를 사용하는 법? (설정 파일로 관리하기)</a></p>\n<ul>\n<li><a href=\"#dotenv\">dotenv</a></li>\n<li><a href=\"#%EC%84%A4%EC%A0%95-%EB%82%B4%EC%9A%A9%EC%9D%84-%EC%84%A0%EC%96%B8\">설정 내용을 선언</a></li>\n<li><a href=\"#1-env-%ED%8C%8C%EC%9D%BC-%EC%82%AC%EC%9A%A9\">1. .env 파일 사용</a></li>\n<li><a href=\"#2-configjs-%EB%93%B1-js-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9\">2. config.js 등 js 파일로 사용</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Node에서 환경 변수를 사용하는 법? (설정 파일로 관리하기) 내가 Spring boot로 개발할 때는 application.yml에 설정을 넣고 개발을 했다. 그러다가 설정에 넣은 값에 변경이 필요할 경우 서버를 내렸다가 올려야 하는 문제가 생겼다. (물론 이중화 되어 있다 하더라도 이렇게 하는건 비효율적..) 그래서 Spring config server를 사용해서 처리하였다. Node.js는 이런 비슷한게 있나 찾아보다가… 아주 똑같지 않지만 설정 파일을 외부에 두고 사용할 수 있는 것을 찾았다. (Node를 첨 다뤄보니 이런게 있는줄 몰랐다) dotenv 먼저 설치를 진행한다. (yarn 을 사용하였는데 npm도 똑같다) yarn add dotenv 설정 내용을 선언 설정 파일을 만드는 형태는 두 가지가 있다. 여기서는 ES6 문법으로 설명한다. (CommonJS 는 간략하게만 표기..) 1. .env 파일 사용 프로젝트 내에 (보통은 자신 프로젝트 루트에) .env 파일을…","frontmatter":{"date":"2021.11.09","title":"NodeJs에서 환경 변수 또는 설정파일을 이용하여 서버 속성 구성하기","categories":"node-js","emoji":"📜"},"fields":{"slug":"/node-js/211109_node-dotenv/"}},"next":{"id":"b3bc4094-22c6-5e1a-ba3c-f231a7a9e449","html":"<h2 id=\"vscode로-node-개발을-진행하다가\" style=\"position:relative;\"><a href=\"#vscode%EB%A1%9C-node-%EA%B0%9C%EB%B0%9C%EC%9D%84-%EC%A7%84%ED%96%89%ED%95%98%EB%8B%A4%EA%B0%80\" aria-label=\"vscode로 node 개발을 진행하다가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCode로 Node 개발을 진행하다가…</h2>\n<p>공부 겸 이번 프로젝트에 적용시키려고 Node를 공부하고 예제를 돌려보려던 중…<br>\n이상한 점을 발견했다.</p>\n<p><strong>express</strong>를 분명 <strong>yarn add express</strong> 이렇게 로컬 프로젝트 영역에 설치했음에도 VSCode에서 해당 모듈을 참고하는 곳은 엉뚱한 곳을 가리키고 있었다.</p>\n<p>경로가 Mac OS 기준으로..</p>\n<blockquote>\n<p>/User/YourHome/Library/Caches/typescript/YourVersion/node_modules/@types/…</p>\n</blockquote>\n<p>이상해서 저기를 열었다가 지워도 똑같이 생성되고 계속 참조했다.<br>\n그래서 이곳저곳 찾다가…<br>\n아주 간단하게 해결하였다.</p>\n<br>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<ol>\n<li>VSCode의 환경설정을 들어가서 (Mac 기준 : Command + ,) 검색창에 아래의 키워드 검색</li>\n<li><strong>disableAutomaticTypeAcquisition</strong> 이거 항목이 체크가 안되어 있을건데 체크해준다.</li>\n<li>라이브러리 참조 영역을 삭제하고 VSCode 재시작 해본다.</li>\n</ol>\n<p><img src=\"/img01.png\" alt=\"\"></p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/48480676/why-vscode-is-importing-packages-from-typescript-cache\">스택오버플로우 유사 질문</a></li>\n<li><a href=\"https://blog.actorsfit.in/a?ID=01700-fdba4144-d6f0-41bd-a475-59f7cc21ca68\">해답</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#vscode%EB%A1%9C-node-%EA%B0%9C%EB%B0%9C%EC%9D%84-%EC%A7%84%ED%96%89%ED%95%98%EB%8B%A4%EA%B0%80\">VSCode로 Node 개발을 진행하다가…</a></p>\n</li>\n<li>\n<p><a href=\"#solution\">Solution</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2021.11.09","title":"VSCode에서 노드 모듈이 이상한 곳을 가리킬 때.. (.../Library/Caches/typescript/.../node_modules/@types/.....)","categories":"node-js","emoji":"📜"},"fields":{"slug":"/node-js/211109_vscode-nodemodule/"}},"prev":{"id":"0869e512-c59a-5c3a-915a-b915505f705a","html":"<h2 id=\"hexo-설치-글을-보면\" style=\"position:relative;\"><a href=\"#hexo-%EC%84%A4%EC%B9%98-%EA%B8%80%EC%9D%84-%EB%B3%B4%EB%A9%B4\" aria-label=\"hexo 설치 글을 보면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hexo 설치 글을 보면…</h2>\n<p>이게 뭐 도움이 될지 모르겠지만…<br>\n나는 hexo 설치할 때 npm 이라는거 대충 알았지 자세히는 몰랐다.<br>\n그래서 거기 가이드에서 설치할 때 보면</p>\n<blockquote>\n<p>npm install hexo -g</p>\n</blockquote>\n<br>\n<p>이렇게 글로벌로 설치하게 하는데 이건 내 생각에 좋은 방법은 아닌 것 같다. (나한테는?)</p>\n<p>난 보통 어떤 프로젝트나 모듈이 프로젝트 내에서만 영향을 줘야지 공통으로 사용하는 곳까지 설치되어 거기서 끌어다 쓰는 형식을 안 좋아한다. (정말 싫어한다 -_-;;)</p>\n<p>그래서 이번에 노드를 학습하면서 이렇게도 관리할 수 있겠구나 싶어서 공유한다.<br>\n뭐 다 아는 사실이겠지만…<br>\nhexo 사용할 디렉토리에서 아래의 명령어 대로 설치한다</p>\n<blockquote>\n<p>npm install hexo</p>\n</blockquote>\n<br>\n<p>이렇게 -g 옵션만 빼면 로컬에서 사용할 수 있는데 여기서 한가지 더..<br>\npath를 등록해줘야 한다.</p>\n<p>난 mac 에서 zsh를 사용하기에..<br>\n자신의 홈 디렉토리에 .zprofile 하나 만들어준다. (만약 있으면 맨 밑에 추가한다)</p>\n<blockquote>\n<p>PATH=“$PATH:/Users/name/hexo_blog_path/node_modules/.bin”</p>\n</blockquote>\n<p>당연한 이야기겠지만 위 경로는 자신에게 알맞는 곳을 찾되 <strong>node_modules</strong> 경로를 잡아주는게 포인트다.</p>\n<p>위와 같이 추가 후 터미널에서 갱신해주면 끝</p>\n<blockquote>\n<p>source .zprofile</p>\n</blockquote>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<p><a href=\"https://hexo.io/docs/\">Hexo</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#hexo-%EC%84%A4%EC%B9%98-%EA%B8%80%EC%9D%84-%EB%B3%B4%EB%A9%B4\">Hexo 설치 글을 보면…</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2021.11.09","title":"Hexo를 글로벌이 아닌 로컬에 설치하는 법","categories":"tools","emoji":"📜"},"fields":{"slug":"/tools/211109_local-install-hexo/211109_local-install-hexo/"}},"site":{"siteMetadata":{"siteUrl":"https://elfinlas.github.io","comments":{"utterances":{"repo":"elfinlas/blog_utterances"}},"projects":[{"title":"마와셀(웹) - 와인 가격 비교","description":"와인 가격 비교 서비스","techStack":["Typescript","React","Next.Js","Nest.Js"],"thumbnailUrl":"myc_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223393940649","github":"","web":"https://appmyc.info","googlePlay":"","appStore":""}},{"title":"마와셀(엡) - 와인과 셀러 관리, 시음노트","description":"보유한 와인의 관리, 시음노트 작성, 보유 와인 셀러의 관리 어플리케이션","techStack":["Dart","Flutter","hive","provider"],"thumbnailUrl":"myc_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223531933037","github":"","web":"","googlePlay":"https://play.google.com/store/apps/details?id=dev.mhlab.myc","appStore":"https://itunes.apple.com/kr/app/apple-store/6474965246"}},{"title":"흑우집합소(웹) - 로또번호 추천 서비스","description":"로또번호 추천 서비스","techStack":["Typescript","React","Next.Js","Nest.Js"],"thumbnailUrl":"bcow_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223059966682","github":"","web":"https://bcow.world/","googlePlay":"","appStore":""}},{"title":"흑우집합소(앱) - 로또번호 추천 서비스","description":"로또번호 추천 서비스","techStack":["Dart","Flutter","drift","provider"],"thumbnailUrl":"bcow_icon.png","links":{"post":"https://blog.naver.com/wisseraph/223232966579","github":"","web":"","googlePlay":"https://play.google.com/store/apps/details?id=dev.mhlab.bcow_world","appStore":"https://itunes.apple.com/kr/app/apple-store/6470312130"}}]}}},"pageContext":{"slug":"/node-js/211109_node-dotenv/","nextSlug":"/node-js/211109_vscode-nodemodule/","prevSlug":"/tools/211109_local-install-hexo/211109_local-install-hexo/"}},"staticQueryHashes":["1186322783","1321405810","3649515864"]}